{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6","program":"C:\\Users\\prana\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","encode_unicode","C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=e3d0616ee9778fe2","-C","extra-filename=-e3d0616ee9778fe2","--out-dir","d:\\prana\\Programming\\My Projects\\novus-package-manager\\novus-packages\\target\\rls\\debug\\deps","-L","dependency=d:\\prana\\Programming\\My Projects\\novus-package-manager\\novus-packages\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\prana\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\prana\\Programming\\My Projects\\novus-package-manager\\novus-packages\\target\\rls\\debug\\deps\\libencode_unicode-e3d0616ee9778fe2.rmeta"},"prelude":{"crate_id":{"name":"encode_unicode","disambiguator":[16712024525932609382,17317288526001771393]},"crate_root":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src","external_crates":[{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}}],"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":351,"byte_end":3487,"line_start":10,"line_end":78,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2391,"byte_end":2398,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"alias_span":null,"name":"CharExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2400,"byte_end":2408,"line_start":56,"line_end":56,"column_start":27,"column_end":35},"alias_span":null,"name":"U8UtfExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2410,"byte_end":2419,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"alias_span":null,"name":"U16UtfExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2421,"byte_end":2427,"line_start":56,"line_end":56,"column_start":48,"column_end":54},"alias_span":null,"name":"StrExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2429,"byte_end":2436,"line_start":56,"line_end":56,"column_start":56,"column_end":63},"alias_span":null,"name":"IterExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2438,"byte_end":2446,"line_start":56,"line_end":56,"column_start":65,"column_end":73},"alias_span":null,"name":"SliceExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2468,"byte_end":2476,"line_start":57,"line_end":57,"column_start":20,"column_end":28},"alias_span":null,"name":"Utf8Char","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2498,"byte_end":2507,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"alias_span":null,"name":"Utf16Char","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2534,"byte_end":2546,"line_start":59,"line_end":59,"column_start":26,"column_end":38},"alias_span":null,"name":"Utf8Iterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2548,"byte_end":2558,"line_start":59,"line_end":59,"column_start":40,"column_end":50},"alias_span":null,"name":"iter_bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2587,"byte_end":2600,"line_start":60,"line_end":60,"column_start":27,"column_end":40},"alias_span":null,"name":"Utf16Iterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2602,"byte_end":2612,"line_start":60,"line_end":60,"column_start":42,"column_end":52},"alias_span":null,"name":"iter_units","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2765,"byte_end":2777,"line_start":64,"line_end":64,"column_start":22,"column_end":34},"alias_span":null,"name":"FromStrError","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2779,"byte_end":2792,"line_start":64,"line_end":64,"column_start":36,"column_end":49},"alias_span":null,"name":"EmptyStrError","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2779,"byte_end":2792,"line_start":64,"line_end":64,"column_start":36,"column_end":49},"alias_span":null,"name":"EmptyStrError","value":"","parent":{"krate":0,"index":689}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2816,"byte_end":2832,"line_start":65,"line_end":65,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidCodepoint","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2834,"byte_end":2845,"line_start":65,"line_end":65,"column_start":40,"column_end":51},"alias_span":null,"name":"InvalidUtf8","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2869,"byte_end":2889,"line_start":66,"line_end":66,"column_start":22,"column_end":42},"alias_span":null,"name":"InvalidUtf8FirstByte","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2890,"byte_end":2911,"line_start":66,"line_end":66,"column_start":43,"column_end":64},"alias_span":null,"name":"InvalidUtf16FirstUnit","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2890,"byte_end":2911,"line_start":66,"line_end":66,"column_start":43,"column_end":64},"alias_span":null,"name":"InvalidUtf16FirstUnit","value":"","parent":{"krate":0,"index":695}},{"kind":"Use","ref_id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2935,"byte_end":2951,"line_start":67,"line_end":67,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidUtf8Slice","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2952,"byte_end":2969,"line_start":67,"line_end":67,"column_start":39,"column_end":56},"alias_span":null,"name":"InvalidUtf16Slice","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2993,"byte_end":3009,"line_start":68,"line_end":68,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidUtf8Array","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3010,"byte_end":3027,"line_start":68,"line_end":68,"column_start":39,"column_end":56},"alias_span":null,"name":"InvalidUtf16Array","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3028,"byte_end":3045,"line_start":68,"line_end":68,"column_start":57,"column_end":74},"alias_span":null,"name":"InvalidUtf16Tuple","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3068,"byte_end":3082,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"alias_span":null,"name":"Utf16PairError","value":"","parent":{"krate":0,"index":686}},{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3194,"byte_end":3206,"line_start":74,"line_end":74,"column_start":30,"column_end":42},"alias_span":null,"name":"Utf8Iterator","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3208,"byte_end":3224,"line_start":74,"line_end":74,"column_start":44,"column_end":60},"alias_span":null,"name":"Utf8CharSplitter","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3226,"byte_end":3235,"line_start":74,"line_end":74,"column_start":62,"column_end":71},"alias_span":null,"name":"Utf8Chars","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3237,"byte_end":3252,"line_start":74,"line_end":74,"column_start":73,"column_end":88},"alias_span":null,"name":"Utf8CharIndices","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3285,"byte_end":3298,"line_start":75,"line_end":75,"column_start":31,"column_end":44},"alias_span":null,"name":"Utf16Iterator","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3300,"byte_end":3317,"line_start":75,"line_end":75,"column_start":46,"column_end":63},"alias_span":null,"name":"Utf16CharSplitter","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3319,"byte_end":3329,"line_start":75,"line_end":75,"column_start":65,"column_end":75},"alias_span":null,"name":"Utf16Chars","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3331,"byte_end":3347,"line_start":75,"line_end":75,"column_start":77,"column_end":93},"alias_span":null,"name":"Utf16CharIndices","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3383,"byte_end":3397,"line_start":76,"line_end":76,"column_start":34,"column_end":48},"alias_span":null,"name":"Utf8CharMerger","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3399,"byte_end":3414,"line_start":76,"line_end":76,"column_start":50,"column_end":65},"alias_span":null,"name":"Utf8CharDecoder","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3450,"byte_end":3465,"line_start":77,"line_end":77,"column_start":34,"column_end":49},"alias_span":null,"name":"Utf16CharMerger","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3467,"byte_end":3483,"line_start":77,"line_end":77,"column_start":51,"column_end":67},"alias_span":null,"name":"Utf16CharDecoder","value":"","parent":{"krate":0,"index":704}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":351,"byte_end":3487,"line_start":10,"line_end":78,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":19},{"krate":0,"index":138},{"krate":0,"index":269},{"krate":0,"index":357},{"krate":0,"index":492},{"krate":0,"index":568},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":704}],"decl_id":null,"docs":"Miscellaneous UTF-8 and UTF-16 types and methods.","sig":null,"attributes":[{"value":"*\nMiscellaneous UTF-8 and UTF-16 types and methods.\n\n# Optional features:\n* `#![no_std]`-mode: There are a few differences:\n  * `Error` doesn't exist, but `description()` is made available as an inherent impl.\n  * `Extend`/`FromIterator`-implementations for `String`/`Vec<u8>`/`Vec<u16>` are missing.\n  * There is no `io`, so `Utf8Iterator` and `Utf8CharSplitter` doesn't implement `Read`.\n\n  This feature is enabled by setting `default-features=false` in `Cargo.toml`:\n  `encode_unicode = {version=\"0.3.4\", default-features=false}`\n* Integration with the [ascii](https://tomprogrammer.github.io/rust-ascii/ascii/index.html) crate:  \n  Convert `Utf8Char` and `Utf16Char` to and from\n  [ascii::`AsciiChar`](https://tomprogrammer.github.io/rust-ascii/ascii/enum.AsciiChar.html).\n\nThe minimum supported version of Rust is 1.15,\nolder versions might work now but can break with a minor update.\n\n[crates.io page](https://crates.io/crates/encode_unicode)  \n[github repository](https://github.com/tormol/encode_unicode)\n\n*/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":351,"byte_end":1369,"line_start":10,"line_end":31,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":1371,"byte_end":1393,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":4921,"byte_end":4942,"line_start":53,"line_end":53,"column_start":5,"column_end":26},"name":"InvalidUtf16FirstUnit","qualname":"::errors::InvalidUtf16FirstUnit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot tell whether an `u16` needs an extra unit,\n because it's a trailing surrogate itself.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":5112,"byte_end":5125,"line_start":59,"line_end":59,"column_start":5,"column_end":18},"name":"EmptyStrError","qualname":"::errors::EmptyStrError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf8Char` or `Utf16Char` from the first codepoint of a str,\n because there are none.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":5261,"byte_end":5274,"line_start":65,"line_end":65,"column_start":5,"column_end":18},"name":"NonAsciiError","qualname":"::errors::NonAsciiError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf8Char` from a standalone `u8`\n that is not an ASCII character.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":5485,"byte_end":5496,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"NonBMPError","qualname":"::errors::NonBMPError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf16Char` from a standalone `u16` that is not a\n codepoint in the basic multilingual plane, but part of a suurrogate pair.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6081,"byte_end":6094,"line_start":91,"line_end":91,"column_start":11,"column_end":24},"name":"Utf16Reserved","qualname":"::errors::InvalidCodepoint::Utf16Reserved","value":"InvalidCodepoint::Utf16Reserved","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" It's reserved for UTF-16 surrogate pairs.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6222,"byte_end":6229,"line_start":93,"line_end":93,"column_start":11,"column_end":18},"name":"TooHigh","qualname":"::errors::InvalidCodepoint::TooHigh","value":"InvalidCodepoint::TooHigh","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" It's higher than the highest codepoint (which is 0x10ffff).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":5997,"byte_end":6013,"line_start":89,"line_end":89,"column_start":5,"column_end":21},"name":"InvalidCodepoint","qualname":"::errors::InvalidCodepoint","value":"pub enum InvalidCodepoint {\n\n    #[doc = r#\" It's reserved for UTF-16 surrogate pairs.\"\"#]\n    Utf16Reserved,\n\n    #[doc = r\" It's higher than the highest codepoint (which is 0x10ffff).\"]\n    TooHigh,\n}","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796}],"decl_id":null,"docs":" Reasons why an `u32` is not a valid UTF codepoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6415,"byte_end":6426,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"error_range","qualname":"<InvalidCodepoint>::error_range","value":"pub fn error_range(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the range of values for which this error would be given.\n","sig":null,"attributes":[{"value":"/ Get the range of values for which this error would be given.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6339,"byte_end":6403,"line_start":97,"line_end":97,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6755,"byte_end":6779,"line_start":108,"line_end":108,"column_start":11,"column_end":35},"name":"FirstIsTrailingSurrogate","qualname":"::errors::InvalidUtf16Array::FirstIsTrailingSurrogate","value":"InvalidUtf16Array::FirstIsTrailingSurrogate","parent":{"krate":0,"index":814},"children":[],"decl_id":null,"docs":" The first unit is a trailing/low surrogate, which is never valid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6929,"byte_end":6957,"line_start":110,"line_end":110,"column_start":11,"column_end":39},"name":"SecondIsNotTrailingSurrogate","qualname":"::errors::InvalidUtf16Array::SecondIsNotTrailingSurrogate","value":"InvalidUtf16Array::SecondIsNotTrailingSurrogate","parent":{"krate":0,"index":814},"children":[],"decl_id":null,"docs":" The second unit is needed, but is not a trailing surrogate.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6647,"byte_end":6664,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"InvalidUtf16Array","qualname":"::errors::InvalidUtf16Array","value":"pub enum InvalidUtf16Array {\n\n    #[doc =\n      r\" The first unit is a trailing/low surrogate, which is never valid.\"]\n    FirstIsTrailingSurrogate,\n\n    #[doc = r\" The second unit is needed, but is not a trailing surrogate.\"]\n    SecondIsNotTrailingSurrogate,\n}","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":817}],"decl_id":null,"docs":" Reasons why a `[u16; 2]` doesn't form a valid UTF-16 codepoint.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":7334,"byte_end":7358,"line_start":118,"line_end":118,"column_start":11,"column_end":35},"name":"FirstIsTrailingSurrogate","qualname":"::errors::InvalidUtf16Tuple::FirstIsTrailingSurrogate","value":"InvalidUtf16Tuple::FirstIsTrailingSurrogate","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" The first unit is a trailing/low surrogate, which is never valid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":7519,"byte_end":7536,"line_start":120,"line_end":120,"column_start":11,"column_end":28},"name":"SuperfluousSecond","qualname":"::errors::InvalidUtf16Tuple::SuperfluousSecond","value":"InvalidUtf16Tuple::SuperfluousSecond","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" You provided a second unit, but the first one stands on its own.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":7644,"byte_end":7657,"line_start":122,"line_end":122,"column_start":11,"column_end":24},"name":"MissingSecond","qualname":"::errors::InvalidUtf16Tuple::MissingSecond","value":"InvalidUtf16Tuple::MissingSecond","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" The first and only unit requires a second unit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":7907,"byte_end":7920,"line_start":126,"line_end":126,"column_start":11,"column_end":24},"name":"InvalidSecond","qualname":"::errors::InvalidUtf16Tuple::InvalidSecond","value":"InvalidUtf16Tuple::InvalidSecond","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" The first unit requires a second unit, but it's not a trailing/low surrogate.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":7121,"byte_end":7138,"line_start":114,"line_end":114,"column_start":5,"column_end":22},"name":"InvalidUtf16Tuple","qualname":"::errors::InvalidUtf16Tuple","value":"pub enum InvalidUtf16Tuple {\n\n    #[doc =\n      r\" The first unit is a trailing/low surrogate, which is never valid.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Note that the value of a low surrogate is actually higher than a high surrogate.\"]\n    FirstIsTrailingSurrogate,\n\n    #[doc =\n      r\" You provided a second unit, but the first one stands on its own.\"]\n    SuperfluousSecond,\n\n    #[doc = r\" The first and only unit requires a second unit.\"]\n    MissingSecond,\n\n    #[doc =\n      r\" The first unit requires a second unit, but it's not a trailing/low surrogate.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Note that the value of a low surrogate is actually higher than a high surrogate.\"]\n    InvalidSecond,\n}","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842}],"decl_id":null,"docs":" Reasons why one or two `u16`s are not valid UTF-16, in sinking precedence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":8136,"byte_end":8146,"line_start":133,"line_end":133,"column_start":11,"column_end":21},"name":"EmptySlice","qualname":"::errors::InvalidUtf16Slice::EmptySlice","value":"InvalidUtf16Slice::EmptySlice","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" The slice is empty.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":8229,"byte_end":8246,"line_start":135,"line_end":135,"column_start":11,"column_end":28},"name":"FirstLowSurrogate","qualname":"::errors::InvalidUtf16Slice::FirstLowSurrogate","value":"InvalidUtf16Slice::FirstLowSurrogate","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" The first unit is a low surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":8362,"byte_end":8375,"line_start":137,"line_end":137,"column_start":11,"column_end":24},"name":"MissingSecond","qualname":"::errors::InvalidUtf16Slice::MissingSecond","value":"InvalidUtf16Slice::MissingSecond","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" The first and only unit requires a second unit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":8523,"byte_end":8544,"line_start":139,"line_end":139,"column_start":11,"column_end":32},"name":"SecondNotLowSurrogate","qualname":"::errors::InvalidUtf16Slice::SecondNotLowSurrogate","value":"InvalidUtf16Slice::SecondNotLowSurrogate","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" The first unit requires a second one, but it's not a trailing surrogate.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":8074,"byte_end":8091,"line_start":131,"line_end":131,"column_start":5,"column_end":22},"name":"InvalidUtf16Slice","qualname":"::errors::InvalidUtf16Slice","value":"pub enum InvalidUtf16Slice {\n\n    #[doc = r\" The slice is empty.\"]\n    EmptySlice,\n\n    #[doc = r\" The first unit is a low surrogate.\"]\n    FirstLowSurrogate,\n\n    #[doc = r\" The first and only unit requires a second unit.\"]\n    MissingSecond,\n\n    #[doc =\n      r\" The first unit requires a second one, but it's not a trailing surrogate.\"]\n    SecondNotLowSurrogate,\n}","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":867}],"decl_id":null,"docs":" Reasons why a slice of `u16`s doesn't start with valid UTF-16.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":8791,"byte_end":8818,"line_start":145,"line_end":145,"column_start":11,"column_end":38},"name":"UnexpectedTrailingSurrogate","qualname":"::errors::Utf16PairError::UnexpectedTrailingSurrogate","value":"Utf16PairError::UnexpectedTrailingSurrogate","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" A trailing surrogate was not preceeded by a leading surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":8988,"byte_end":9013,"line_start":147,"line_end":147,"column_start":11,"column_end":36},"name":"UnmatchedLeadingSurrogate","qualname":"::errors::Utf16PairError::UnmatchedLeadingSurrogate","value":"Utf16PairError::UnmatchedLeadingSurrogate","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" A leading surrogate was followed by an unit that was not a trailing surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":9180,"byte_end":9190,"line_start":149,"line_end":149,"column_start":11,"column_end":21},"name":"Incomplete","qualname":"::errors::Utf16PairError::Incomplete","value":"Utf16PairError::Incomplete","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" A trailing surrogate was expected when the end was reached.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":8689,"byte_end":8703,"line_start":143,"line_end":143,"column_start":5,"column_end":19},"name":"Utf16PairError","qualname":"::errors::Utf16PairError","value":"pub enum Utf16PairError {\n\n    #[doc =\n      r\" A trailing surrogate was not preceeded by a leading surrogate.\"]\n    UnexpectedTrailingSurrogate,\n\n    #[doc =\n      r\" A leading surrogate was followed by an unit that was not a trailing surrogate.\"]\n    UnmatchedLeadingSurrogate,\n\n    #[doc = r\" A trailing surrogate was expected when the end was reached.\"]\n    Incomplete,\n}","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890}],"decl_id":null,"docs":" Types of invalid sequences encountered by `Utf16CharParser`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":9457,"byte_end":9475,"line_start":156,"line_end":156,"column_start":11,"column_end":29},"name":"MultipleCodepoints","qualname":"::errors::FromStrError::MultipleCodepoints","value":"FromStrError::MultipleCodepoints","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" `Utf8Char` or `Utf16Char` cannot store more than a single codepoint.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":9575,"byte_end":9580,"line_start":158,"line_end":158,"column_start":11,"column_end":16},"name":"Empty","qualname":"::errors::FromStrError::Empty","value":"FromStrError::Empty","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" `Utf8Char` or `Utf16Char` cannot be empty.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":9351,"byte_end":9363,"line_start":154,"line_end":154,"column_start":5,"column_end":17},"name":"FromStrError","qualname":"::errors::FromStrError","value":"pub enum FromStrError {\n\n    #[doc =\n      r\" `Utf8Char` or `Utf16Char` cannot store more than a single codepoint.\"]\n    MultipleCodepoints,\n\n    #[doc = r\" `Utf8Char` or `Utf16Char` cannot be empty.\"]\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":911}],"decl_id":null,"docs":" Reasons why `Utf8Char::from_str()` or `Utf16Char::from_str()` failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":9793,"byte_end":9807,"line_start":165,"line_end":165,"column_start":11,"column_end":25},"name":"TooLongSeqence","qualname":"::errors::InvalidUtf8FirstByte::TooLongSeqence","value":"InvalidUtf8FirstByte::TooLongSeqence","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" Sequences cannot be longer than 4 bytes. Is given for values >= 240.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":10002,"byte_end":10018,"line_start":167,"line_end":167,"column_start":11,"column_end":27},"name":"ContinuationByte","qualname":"::errors::InvalidUtf8FirstByte::ContinuationByte","value":"InvalidUtf8FirstByte::ContinuationByte","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" This byte belongs to a previous sequence. Is given for values between 128 and 192 (exclusive).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":9679,"byte_end":9699,"line_start":163,"line_end":163,"column_start":5,"column_end":25},"name":"InvalidUtf8FirstByte","qualname":"::errors::InvalidUtf8FirstByte","value":"pub enum InvalidUtf8FirstByte {\n\n    #[doc =\n      r\" Sequences cannot be longer than 4 bytes. Is given for values >= 240.\"]\n    TooLongSeqence,\n\n    #[doc =\n      r\" This byte belongs to a previous sequence. Is given for values between 128 and 192 (exclusive).\"]\n    ContinuationByte,\n}","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":932}],"decl_id":null,"docs":" Reasons why a byte is not the start of a UTF-8 codepoint.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11554,"byte_end":11563,"line_start":220,"line_end":220,"column_start":5,"column_end":14},"name":"FirstByte","qualname":"::errors::InvalidUtf8::FirstByte","value":"InvalidUtf8::FirstByte(InvalidUtf8FirstByte)","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" Something is wrong with the first byte.\n","sig":null,"attributes":[{"value":"/ Something is wrong with the first byte.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11506,"byte_end":11549,"line_start":219,"line_end":219,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11704,"byte_end":11724,"line_start":223,"line_end":223,"column_start":5,"column_end":25},"name":"NotAContinuationByte","qualname":"::errors::InvalidUtf8::NotAContinuationByte","value":"InvalidUtf8::NotAContinuationByte(usize)","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" The byte at index 1...3 should be a continuation byte,\n but dosesn't fit the pattern 0b10xx_xxxx.\n","sig":null,"attributes":[{"value":"/ The byte at index 1...3 should be a continuation byte,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11591,"byte_end":11649,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/ but dosesn't fit the pattern 0b10xx_xxxx.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11654,"byte_end":11699,"line_start":222,"line_end":222,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11986,"byte_end":11994,"line_start":228,"line_end":228,"column_start":5,"column_end":13},"name":"OverLong","qualname":"::errors::InvalidUtf8::OverLong","value":"InvalidUtf8::OverLong","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" There are too many leading zeros: it could be a byte shorter.","sig":null,"attributes":[{"value":"/ There are too many leading zeros: it could be a byte shorter.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11737,"byte_end":11802,"line_start":224,"line_end":224,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11807,"byte_end":11810,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [Decoding this could allow someone to input otherwise prohibited","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11815,"byte_end":11883,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ characters and sequences, such as \"../\"](https://tools.ietf.org/html/rfc3629#section-10).","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11888,"byte_end":11981,"line_start":227,"line_end":227,"column_start":5,"column_end":98}}]},{"kind":"Enum","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11488,"byte_end":11499,"line_start":218,"line_end":218,"column_start":10,"column_end":21},"name":"InvalidUtf8","qualname":"::errors::InvalidUtf8","value":"pub enum InvalidUtf8 {\n\n    /// Something is wrong with the first byte.\n    FirstByte(InvalidUtf8FirstByte),\n\n    /// The byte at index 1...3 should be a continuation byte,\n    /// but dosesn't fit the pattern 0b10xx_xxxx.\n    NotAContinuationByte(usize),\n\n    /// There are too many leading zeros: it could be a byte shorter.\n    ///\n    /// [Decoding this could allow someone to input otherwise prohibited\n    /// characters and sequences, such as \"../\"](https://tools.ietf.org/html/rfc3629#section-10).\n    OverLong,\n}","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957}],"decl_id":null,"docs":" Reasons why a byte sequence is not valid UTF-8, excluding invalid codepoint.\n In sinking precedence.\n","sig":null,"attributes":[{"value":"/ Reasons why a byte sequence is not valid UTF-8, excluding invalid codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11328,"byte_end":11408,"line_start":215,"line_end":215,"column_start":1,"column_end":81}},{"value":"/ In sinking precedence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":11409,"byte_end":11435,"line_start":216,"line_end":216,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":12804,"byte_end":12808,"line_start":249,"line_end":249,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::InvalidUtf8Array::Utf8","value":"InvalidUtf8Array::Utf8(InvalidUtf8)","parent":{"krate":0,"index":978},"children":[],"decl_id":null,"docs":" Not a valid UTF-8 sequence.\n","sig":null,"attributes":[{"value":"/ Not a valid UTF-8 sequence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":12768,"byte_end":12799,"line_start":248,"line_end":248,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":12866,"byte_end":12875,"line_start":251,"line_end":251,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::errors::InvalidUtf8Array::Codepoint","value":"InvalidUtf8Array::Codepoint(InvalidCodepoint)","parent":{"krate":0,"index":978},"children":[],"decl_id":null,"docs":" Not a valid unicode codepoint.\n","sig":null,"attributes":[{"value":"/ Not a valid unicode codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":12827,"byte_end":12861,"line_start":250,"line_end":250,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":12745,"byte_end":12761,"line_start":247,"line_end":247,"column_start":10,"column_end":26},"name":"InvalidUtf8Array","qualname":"::errors::InvalidUtf8Array","value":"pub enum InvalidUtf8Array {\n\n    /// Not a valid UTF-8 sequence.\n    Utf8(InvalidUtf8),\n\n    /// Not a valid unicode codepoint.\n    Codepoint(InvalidCodepoint),\n}","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":982}],"decl_id":null,"docs":" Reasons why a byte array is not valid UTF-8, in sinking precedence.\n","sig":null,"attributes":[{"value":"/ Reasons why a byte array is not valid UTF-8, in sinking precedence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":12621,"byte_end":12692,"line_start":245,"line_end":245,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":13550,"byte_end":13554,"line_start":270,"line_end":270,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::InvalidUtf8Slice::Utf8","value":"InvalidUtf8Slice::Utf8(InvalidUtf8)","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" Something is certainly wrong with the first byte.\n","sig":null,"attributes":[{"value":"/ Something is certainly wrong with the first byte.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":13492,"byte_end":13545,"line_start":269,"line_end":269,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":13615,"byte_end":13624,"line_start":272,"line_end":272,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::errors::InvalidUtf8Slice::Codepoint","value":"InvalidUtf8Slice::Codepoint(InvalidCodepoint)","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" The encoded codepoint is invalid:\n","sig":null,"attributes":[{"value":"/ The encoded codepoint is invalid:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":13573,"byte_end":13610,"line_start":271,"line_end":271,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":13702,"byte_end":13710,"line_start":274,"line_end":274,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::errors::InvalidUtf8Slice::TooShort","value":"InvalidUtf8Slice::TooShort(usize)","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" The slice is too short; n bytes was required.\n","sig":null,"attributes":[{"value":"/ The slice is too short; n bytes was required.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":13648,"byte_end":13697,"line_start":273,"line_end":273,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":13469,"byte_end":13485,"line_start":268,"line_end":268,"column_start":10,"column_end":26},"name":"InvalidUtf8Slice","qualname":"::errors::InvalidUtf8Slice","value":"pub enum InvalidUtf8Slice {\n\n    /// Something is certainly wrong with the first byte.\n    Utf8(InvalidUtf8),\n\n    /// The encoded codepoint is invalid:\n    Codepoint(InvalidCodepoint),\n\n    /// The slice is too short; n bytes was required.\n    TooShort(usize),\n}","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013}],"decl_id":null,"docs":" Reasons why a byte slice is not valid UTF-8, in sinking precedence.\n","sig":null,"attributes":[{"value":"/ Reasons why a byte slice is not valid UTF-8, in sinking precedence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":13345,"byte_end":13416,"line_start":266,"line_end":266,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15235,"byte_end":15243,"line_start":29,"line_end":29,"column_start":11,"column_end":19},"name":"U8UtfExt","qualname":"::traits::U8UtfExt","value":"U8UtfExt","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Methods for working with `u8`s as UTF-8 bytes.\n","sig":null,"attributes":[{"value":"/ Methods for working with `u8`s as UTF-8 bytes.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15174,"byte_end":15224,"line_start":28,"line_end":28,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15633,"byte_end":15649,"line_start":42,"line_end":42,"column_start":8,"column_end":24},"name":"extra_utf8_bytes","qualname":"::traits::U8UtfExt::extra_utf8_bytes","value":"pub fn extra_utf8_bytes(Self) -> Result<usize, InvalidUtf8FirstByte>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" How many more bytes will you need to complete this codepoint?","sig":null,"attributes":[{"value":"/ How many more bytes will you need to complete this codepoint?","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15250,"byte_end":15315,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15320,"byte_end":15323,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15328,"byte_end":15340,"line_start":32,"line_end":32,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15345,"byte_end":15348,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the byte is not a valid start of an UTF-8","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15353,"byte_end":15422,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ codepoint:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15427,"byte_end":15441,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15446,"byte_end":15449,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ * `128..192`: ContinuationByte","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15454,"byte_end":15488,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/ * `248..`: TooLongSequence","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15493,"byte_end":15523,"line_start":38,"line_end":38,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15528,"byte_end":15531,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Values in 244..248 represent a too high codepoint, but do not cause an","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15536,"byte_end":15610,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ error.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15615,"byte_end":15625,"line_start":41,"line_end":41,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15963,"byte_end":15989,"line_start":49,"line_end":49,"column_start":8,"column_end":34},"name":"extra_utf8_bytes_unchecked","qualname":"::traits::U8UtfExt::extra_utf8_bytes_unchecked","value":"pub fn extra_utf8_bytes_unchecked(Self) -> usize","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" How many more bytes will you need to complete this codepoint?","sig":null,"attributes":[{"value":"/ How many more bytes will you need to complete this codepoint?","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15700,"byte_end":15765,"line_start":44,"line_end":44,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15770,"byte_end":15773,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function assumes that the byte is a valid UTF-8 start, and might","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15778,"byte_end":15851,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ return any value otherwise. (but the function is pure and safe to call","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15856,"byte_end":15930,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ with any value).","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":15935,"byte_end":15955,"line_start":48,"line_end":48,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":19850,"byte_end":19859,"line_start":127,"line_end":127,"column_start":11,"column_end":20},"name":"U16UtfExt","qualname":"::traits::U16UtfExt","value":"U16UtfExt","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Methods for working with `u16`s as UTF-16 units.\n","sig":null,"attributes":[{"value":"/ Methods for working with `u16`s as UTF-16 units.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":19787,"byte_end":19839,"line_start":126,"line_end":126,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":20059,"byte_end":20081,"line_start":132,"line_end":132,"column_start":8,"column_end":30},"name":"utf16_needs_extra_unit","qualname":"::traits::U16UtfExt::utf16_needs_extra_unit","value":"pub fn utf16_needs_extra_unit(Self) -> Result<bool, InvalidUtf16FirstUnit>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Will you need an extra unit to complete this codepoint?","sig":null,"attributes":[{"value":"/ Will you need an extra unit to complete this codepoint?","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":19866,"byte_end":19925,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":19930,"byte_end":19933,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` for trailing surrogates, `Ok(true)` for leading surrogates,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":19938,"byte_end":20015,"line_start":130,"line_end":130,"column_start":5,"column_end":82}},{"value":"/ and `Ok(false)` for others.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":20020,"byte_end":20051,"line_start":131,"line_end":131,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":20328,"byte_end":20354,"line_start":138,"line_end":138,"column_start":8,"column_end":34},"name":"is_utf16_leading_surrogate","qualname":"::traits::U16UtfExt::is_utf16_leading_surrogate","value":"pub fn is_utf16_leading_surrogate(Self) -> bool","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Does this `u16` need another `u16` to complete a codepoint?\n Returns `(self & 0xfc00) == 0xd800`","sig":null,"attributes":[{"value":"/ Does this `u16` need another `u16` to complete a codepoint?","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":20132,"byte_end":20195,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ Returns `(self & 0xfc00) == 0xd800`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":20200,"byte_end":20239,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":20244,"byte_end":20247,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Is basically an unchecked variant of `utf16_needs_extra_unit()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":20252,"byte_end":20320,"line_start":137,"line_end":137,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21099,"byte_end":21106,"line_start":161,"line_end":161,"column_start":11,"column_end":18},"name":"CharExt","qualname":"::traits::CharExt","value":"CharExt: Sized","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" Extension trait for `char` that adds methods for converting to and from UTF-8 or UTF-16.\n","sig":null,"attributes":[{"value":"/ Extension trait for `char` that adds methods for converting to and from UTF-8 or UTF-16.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":20996,"byte_end":21088,"line_start":160,"line_end":160,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21307,"byte_end":21314,"line_start":166,"line_end":166,"column_start":8,"column_end":15},"name":"to_utf8","qualname":"::traits::CharExt::to_utf8","value":"pub fn to_utf8(Self) -> Utf8Char","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Get the UTF-8 representation of this codepoint.","sig":null,"attributes":[{"value":"/ Get the UTF-8 representation of this codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21120,"byte_end":21171,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21176,"byte_end":21179,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ `Utf8Char` is to `[u8;4]` what `char` is to `u32`:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21184,"byte_end":21238,"line_start":164,"line_end":164,"column_start":5,"column_end":59}},{"value":"/ a restricted type that cannot be mutated internally.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21243,"byte_end":21299,"line_start":165,"line_end":165,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21529,"byte_end":21537,"line_start":172,"line_end":172,"column_start":8,"column_end":16},"name":"to_utf16","qualname":"::traits::CharExt::to_utf16","value":"pub fn to_utf16(Self) -> Utf16Char","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Get the UTF-16 representation of this codepoint.","sig":null,"attributes":[{"value":"/ Get the UTF-16 representation of this codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21339,"byte_end":21391,"line_start":168,"line_end":168,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21396,"byte_end":21399,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ `Utf16Char` is to `[u16;2]` what `char` is to `u32`:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21404,"byte_end":21460,"line_start":170,"line_end":170,"column_start":5,"column_end":61}},{"value":"/ a restricted type that cannot be mutated internally.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21465,"byte_end":21521,"line_start":171,"line_end":171,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21889,"byte_end":21904,"line_start":179,"line_end":179,"column_start":8,"column_end":23},"name":"iter_utf8_bytes","qualname":"::traits::CharExt::iter_utf8_bytes","value":"pub fn iter_utf8_bytes(Self) -> Utf8Iterator","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Iterate over or [read](https://doc.rust-lang.org/std/io/trait.Read.html)\n the one to four bytes in the UTF-8 representation of this codepoint.","sig":null,"attributes":[{"value":"/ Iterate over or [read](https://doc.rust-lang.org/std/io/trait.Read.html)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21563,"byte_end":21639,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ the one to four bytes in the UTF-8 representation of this codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21644,"byte_end":21716,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21721,"byte_end":21724,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ An identical alternative to the unstable `char.encode_utf8()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21729,"byte_end":21795,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ That method somehow still exist on stable, so I have to use a different name.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21800,"byte_end":21881,"line_start":178,"line_end":178,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22192,"byte_end":22208,"line_start":185,"line_end":185,"column_start":8,"column_end":24},"name":"iter_utf16_units","qualname":"::traits::CharExt::iter_utf16_units","value":"pub fn iter_utf16_units(Self) -> Utf16Iterator","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Iterate over the one or two units in the UTF-16 representation of this codepoint.","sig":null,"attributes":[{"value":"/ Iterate over the one or two units in the UTF-16 representation of this codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21933,"byte_end":22018,"line_start":181,"line_end":181,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22023,"byte_end":22026,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ An identical alternative to the unstable `char.encode_utf16()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22031,"byte_end":22098,"line_start":183,"line_end":183,"column_start":5,"column_end":72}},{"value":"/ That method somehow still exist on stable, so I have to use a different name.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22103,"byte_end":22184,"line_start":184,"line_end":184,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22431,"byte_end":22444,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"to_utf8_array","qualname":"::traits::CharExt::to_utf8_array","value":"pub fn to_utf8_array(Self) -> ([u8; ], usize)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert this char to an UTF-8 array, and also return how many bytes of\n the array are used,","sig":null,"attributes":[{"value":"/ Convert this char to an UTF-8 array, and also return how many bytes of","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22239,"byte_end":22313,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ the array are used,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22318,"byte_end":22341,"line_start":189,"line_end":189,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22346,"byte_end":22349,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The returned array is left-aligned with unused bytes set to zero.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22354,"byte_end":22423,"line_start":191,"line_end":191,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22895,"byte_end":22909,"line_start":207,"line_end":207,"column_start":8,"column_end":22},"name":"to_utf16_array","qualname":"::traits::CharExt::to_utf16_array","value":"pub fn to_utf16_array(Self) -> [u16; ]","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert this `char` to UTF-16.","sig":null,"attributes":[{"value":"/ Convert this `char` to UTF-16.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22477,"byte_end":22511,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22516,"byte_end":22519,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The second element is non-zero when a surrogate pair is required.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22524,"byte_end":22593,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22598,"byte_end":22601,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22606,"byte_end":22620,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22625,"byte_end":22628,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22633,"byte_end":22640,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22645,"byte_end":22677,"line_start":201,"line_end":201,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22682,"byte_end":22685,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ assert_eq!('@'.to_utf16_array(), ['@' as u16, 0]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22690,"byte_end":22744,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"/ assert_eq!('睷'.to_utf16_array(), ['睷' as u16, 0]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22749,"byte_end":22807,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ assert_eq!('\\u{abcde}'.to_utf16_array(), [0xda6f, 0xdcde]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22812,"byte_end":22875,"line_start":205,"line_end":205,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22880,"byte_end":22887,"line_start":206,"line_end":206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23349,"byte_end":23363,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"to_utf16_tuple","qualname":"::traits::CharExt::to_utf16_tuple","value":"pub fn to_utf16_tuple(Self) -> (u16, Option<u16>)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert this `char` to UTF-16.\n The second item is `Some` if a surrogate pair is required.","sig":null,"attributes":[{"value":"/ Convert this `char` to UTF-16.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22934,"byte_end":22968,"line_start":209,"line_end":209,"column_start":5,"column_end":39}},{"value":"/ The second item is `Some` if a surrogate pair is required.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":22973,"byte_end":23035,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23040,"byte_end":23043,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23048,"byte_end":23062,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23067,"byte_end":23070,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23075,"byte_end":23082,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23087,"byte_end":23119,"line_start":215,"line_end":215,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23124,"byte_end":23127,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!('@'.to_utf16_tuple(), ('@' as u16, None));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23132,"byte_end":23189,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"/ assert_eq!('睷'.to_utf16_tuple(), ('睷' as u16, None));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23194,"byte_end":23255,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/ assert_eq!('\\u{abcde}'.to_utf16_tuple(), (0xda6f, Some(0xdcde)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23260,"byte_end":23329,"line_start":219,"line_end":219,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23334,"byte_end":23341,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24427,"byte_end":24448,"line_start":248,"line_end":248,"column_start":8,"column_end":29},"name":"from_utf8_slice_start","qualname":"::traits::CharExt::from_utf8_slice_start","value":"pub fn from_utf8_slice_start(&[u8]) -> Result<(Self, usize), InvalidUtf8Slice>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Create a `char` from the start of an UTF-8 slice,\n and also return how many bytes were used.","sig":null,"attributes":[{"value":"/ Create a `char` from the start of an UTF-8 slice,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23400,"byte_end":23453,"line_start":225,"line_end":225,"column_start":5,"column_end":58}},{"value":"/ and also return how many bytes were used.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23458,"byte_end":23503,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23508,"byte_end":23511,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23516,"byte_end":23528,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23533,"byte_end":23536,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` if the slice is empty, doesn't start with a valid","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23541,"byte_end":23611,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ UTF-8 sequence or is too short for the sequence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23616,"byte_end":23668,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23673,"byte_end":23676,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23681,"byte_end":23695,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23700,"byte_end":23703,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23708,"byte_end":23715,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23720,"byte_end":23752,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/ use encode_unicode::error::InvalidUtf8Slice::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23757,"byte_end":23808,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::InvalidUtf8::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23813,"byte_end":23859,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23864,"byte_end":23867,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[b'A', b'B', b'C']), Ok(('A',1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23872,"byte_end":23950,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[0xdd, 0xbb]), Ok(('\\u{77b}',2)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":23955,"byte_end":24033,"line_start":241,"line_end":241,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24038,"byte_end":24041,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[]), Err(TooShort(1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24046,"byte_end":24113,"line_start":243,"line_end":243,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[0xf0, 0x99]), Err(TooShort(4)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24118,"byte_end":24195,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[0xee, b'F', 0x80]), Err(Utf8(NotAContinuationByte(1))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24200,"byte_end":24301,"line_start":245,"line_end":245,"column_start":5,"column_end":106}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[0xee, 0x99, 0x0f]), Err(Utf8(NotAContinuationByte(2))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24306,"byte_end":24407,"line_start":246,"line_end":246,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24412,"byte_end":24419,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24711,"byte_end":24733,"line_start":254,"line_end":254,"column_start":8,"column_end":30},"name":"from_utf16_slice_start","qualname":"::traits::CharExt::from_utf16_slice_start","value":"pub fn from_utf16_slice_start(&[u16])\n-> Result<(Self, usize), InvalidUtf16Slice>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Create a `char` from the start of an UTF-16 slice,\n and also return how many units were used.","sig":null,"attributes":[{"value":"/ Create a `char` from the start of an UTF-16 slice,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24508,"byte_end":24562,"line_start":250,"line_end":250,"column_start":5,"column_end":59}},{"value":"/ and also return how many units were used.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24567,"byte_end":24612,"line_start":251,"line_end":251,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24617,"byte_end":24620,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ If you want to continue after an error, continue with the next `u16` unit.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24625,"byte_end":24703,"line_start":253,"line_end":253,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25955,"byte_end":25970,"line_start":282,"line_end":282,"column_start":8,"column_end":23},"name":"from_utf8_array","qualname":"::traits::CharExt::from_utf8_array","value":"pub fn from_utf8_array([u8; ]) -> Result<Self, InvalidUtf8Array>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert an UTF-8 sequence as returned from `.to_utf8_array()` into a `char`","sig":null,"attributes":[{"value":"/ Convert an UTF-8 sequence as returned from `.to_utf8_array()` into a `char`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24797,"byte_end":24876,"line_start":257,"line_end":257,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24881,"byte_end":24884,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The codepoint must start at the first byte, and leftover bytes are ignored.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24889,"byte_end":24968,"line_start":259,"line_end":259,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24973,"byte_end":24976,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24981,"byte_end":24993,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":24998,"byte_end":25001,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` if the array doesn't start with a valid UTF-8 sequence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25006,"byte_end":25082,"line_start":263,"line_end":263,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25087,"byte_end":25090,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25095,"byte_end":25109,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25114,"byte_end":25117,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25122,"byte_end":25129,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25134,"byte_end":25166,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/ use encode_unicode::error::InvalidUtf8Array::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25171,"byte_end":25222,"line_start":269,"line_end":269,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::InvalidUtf8::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25227,"byte_end":25273,"line_start":270,"line_end":270,"column_start":5,"column_end":51}},{"value":"/ use encode_unicode::error::InvalidCodepoint::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25278,"byte_end":25329,"line_start":271,"line_end":271,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25334,"byte_end":25337,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf8_array([b'A', 0, 0, 0]), Ok('A'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25342,"byte_end":25406,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(char::from_utf8_array([0xf4, 0x8b, 0xbb, 0xbb]), Ok('\\u{10befb}'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25411,"byte_end":25493,"line_start":274,"line_end":274,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(char::from_utf8_array([b'A', b'B', b'C', b'D']), Ok('A'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25498,"byte_end":25571,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(char::from_utf8_array([0, 0, 0xcc, 0xbb]), Ok('\\0'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25576,"byte_end":25644,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25649,"byte_end":25652,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf8_array([0xef, b'F', 0x80, 0x80]), Err(Utf8(NotAContinuationByte(1))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25657,"byte_end":25757,"line_start":278,"line_end":278,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(char::from_utf8_array([0xc1, 0x80, 0, 0]), Err(Utf8(OverLong)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25762,"byte_end":25841,"line_start":279,"line_end":279,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(char::from_utf8_array([0xf7, 0xaa, 0x99, 0x88]), Err(Codepoint(TooHigh)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25846,"byte_end":25935,"line_start":280,"line_end":280,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":25940,"byte_end":25947,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26871,"byte_end":26887,"line_start":301,"line_end":301,"column_start":8,"column_end":24},"name":"from_utf16_array","qualname":"::traits::CharExt::from_utf16_array","value":"pub fn from_utf16_array([u16; ]) -> Result<Self, InvalidUtf16Array>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 pair as returned from `.to_utf16_array()` into a `char`.","sig":null,"attributes":[{"value":"/ Convert a UTF-16 pair as returned from `.to_utf16_array()` into a `char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26025,"byte_end":26102,"line_start":284,"line_end":284,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26107,"byte_end":26110,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The second element is ignored when not required.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26115,"byte_end":26167,"line_start":286,"line_end":286,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26172,"byte_end":26175,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26180,"byte_end":26194,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26199,"byte_end":26202,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26207,"byte_end":26214,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26219,"byte_end":26251,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/ use encode_unicode::error::InvalidUtf16Array;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26256,"byte_end":26305,"line_start":292,"line_end":292,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26310,"byte_end":26313,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf16_array(['x' as u16, 'y' as u16]), Ok('x'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26318,"byte_end":26392,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(char::from_utf16_array(['睷' as u16, 0]), Ok('睷'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26397,"byte_end":26466,"line_start":295,"line_end":295,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(char::from_utf16_array([0xda6f, 0xdcde]), Ok('\\u{abcde}'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26471,"byte_end":26545,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(char::from_utf16_array([0xf111, 0xdbad]), Ok('\\u{f111}'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26550,"byte_end":26623,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(char::from_utf16_array([0xdaaf, 0xdaaf]), Err(InvalidUtf16Array::SecondIsNotTrailingSurrogate));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26628,"byte_end":26739,"line_start":298,"line_end":298,"column_start":5,"column_end":116}},{"value":"/ assert_eq!(char::from_utf16_array([0xdcac, 0x9000]), Err(InvalidUtf16Array::FirstIsTrailingSurrogate));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26744,"byte_end":26851,"line_start":299,"line_end":299,"column_start":5,"column_end":112}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26856,"byte_end":26863,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27031,"byte_end":27047,"line_start":304,"line_end":304,"column_start":8,"column_end":24},"name":"from_utf16_tuple","qualname":"::traits::CharExt::from_utf16_tuple","value":"pub fn from_utf16_tuple((u16, Option<u16>)) -> Result<Self, InvalidUtf16Tuple>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 pair as returned from `.to_utf16_tuple()` into a `char`.\n","sig":null,"attributes":[{"value":"/ Convert a UTF-16 pair as returned from `.to_utf16_tuple()` into a `char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":26946,"byte_end":27023,"line_start":303,"line_end":303,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27632,"byte_end":27663,"line_start":323,"line_end":323,"column_start":15,"column_end":46},"name":"from_utf8_exact_slice_unchecked","qualname":"::traits::CharExt::from_utf8_exact_slice_unchecked","value":"pub unsafe fn from_utf8_exact_slice_unchecked(&[u8]) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert an UTF-8 sequence into a char.","sig":null,"attributes":[{"value":"/ Convert an UTF-8 sequence into a char.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27117,"byte_end":27159,"line_start":307,"line_end":307,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27164,"byte_end":27167,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ The length of the slice is taken as length of the sequence;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27172,"byte_end":27235,"line_start":309,"line_end":309,"column_start":5,"column_end":68}},{"value":"/ it should be 1,2,3 or 4.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27240,"byte_end":27268,"line_start":310,"line_end":310,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27273,"byte_end":27276,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27281,"byte_end":27293,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27298,"byte_end":27301,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The slice must contain exactly one, valid, UTF-8 sequence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27306,"byte_end":27368,"line_start":314,"line_end":314,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27373,"byte_end":27376,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Passing a slice that produces an invalid codepoint is always undefined","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27381,"byte_end":27455,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ behavior; Later checks that the codepoint is valid can be removed","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27460,"byte_end":27529,"line_start":317,"line_end":317,"column_start":5,"column_end":74}},{"value":"/ by the compiler.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27534,"byte_end":27554,"line_start":318,"line_end":318,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27559,"byte_end":27562,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27567,"byte_end":27579,"line_start":320,"line_end":320,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27584,"byte_end":27587,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ If the slice is empty","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27592,"byte_end":27617,"line_start":322,"line_end":322,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28359,"byte_end":28385,"line_start":342,"line_end":342,"column_start":8,"column_end":34},"name":"from_utf16_array_unchecked","qualname":"::traits::CharExt::from_utf16_array_unchecked","value":"pub fn from_utf16_array_unchecked([u16; ]) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 array as returned from `.to_utf16_array()` into a\n `char`.","sig":null,"attributes":[{"value":"/ Convert a UTF-16 array as returned from `.to_utf16_array()` into a","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27690,"byte_end":27760,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/ `char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27765,"byte_end":27776,"line_start":326,"line_end":326,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27781,"byte_end":27784,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This function is safe because it avoids creating invalid codepoints,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27789,"byte_end":27861,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ but the returned value might not be what one expectedd.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27866,"byte_end":27925,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27930,"byte_end":27933,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27938,"byte_end":27952,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27957,"byte_end":27960,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27965,"byte_end":27972,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":27977,"byte_end":28009,"line_start":334,"line_end":334,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28014,"byte_end":28017,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ // starts with a trailing surrogate - converted as if it was a valid","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28022,"byte_end":28094,"line_start":336,"line_end":336,"column_start":5,"column_end":77}},{"value":"/ // surrogate pair anyway.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28099,"byte_end":28128,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(char::from_utf16_array_unchecked([0xdbad, 0xf19e]), '\\u{fb59e}');","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28133,"byte_end":28213,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ // missing trailing surrogate - ditto","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28218,"byte_end":28259,"line_start":339,"line_end":339,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(char::from_utf16_array_unchecked([0xd802, 0]), '\\u{10800}');","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28264,"byte_end":28339,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28344,"byte_end":28351,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28509,"byte_end":28535,"line_start":345,"line_end":345,"column_start":15,"column_end":41},"name":"from_utf16_tuple_unchecked","qualname":"::traits::CharExt::from_utf16_tuple_unchecked","value":"pub unsafe fn from_utf16_tuple_unchecked((u16, Option<u16>)) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 tuple as returned from `.to_utf16_tuple()` into a `char`.\n","sig":null,"attributes":[{"value":"/ Convert a UTF-16 tuple as returned from `.to_utf16_tuple()` into a `char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28416,"byte_end":28494,"line_start":344,"line_end":344,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":29451,"byte_end":29468,"line_start":370,"line_end":370,"column_start":8,"column_end":25},"name":"from_u32_detailed","qualname":"::traits::CharExt::from_u32_detailed","value":"pub fn from_u32_detailed(u32) -> Result<Self, InvalidCodepoint>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Produces more detailed errors than `char::from_u32()`","sig":null,"attributes":[{"value":"/ Produces more detailed errors than `char::from_u32()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28578,"byte_end":28635,"line_start":348,"line_end":348,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28640,"byte_end":28643,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28648,"byte_end":28660,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28665,"byte_end":28668,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28673,"byte_end":28714,"line_start":352,"line_end":352,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28719,"byte_end":28722,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ * the value is greater than 0x10ffff","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28727,"byte_end":28767,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ * the value is between 0xd800 and 0xdfff (inclusive)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28772,"byte_end":28828,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28833,"byte_end":28836,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28841,"byte_end":28855,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28860,"byte_end":28863,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28868,"byte_end":28875,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28880,"byte_end":28912,"line_start":360,"line_end":360,"column_start":5,"column_end":37}},{"value":"/ use encode_unicode::error::InvalidCodepoint;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28917,"byte_end":28965,"line_start":361,"line_end":361,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28970,"byte_end":28973,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_u32_detailed(0x41), Ok('A'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":28978,"byte_end":29033,"line_start":363,"line_end":363,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(char::from_u32_detailed(0x40_00_00), Err(InvalidCodepoint::TooHigh));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":29038,"byte_end":29122,"line_start":364,"line_end":364,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(char::from_u32_detailed(0xd951), Err(InvalidCodepoint::Utf16Reserved));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":29127,"byte_end":29213,"line_start":365,"line_end":365,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(char::from_u32_detailed(0xdddd), Err(InvalidCodepoint::Utf16Reserved));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":29218,"byte_end":29304,"line_start":366,"line_end":366,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(char::from_u32_detailed(0xdd), Ok('Ý'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":29309,"byte_end":29365,"line_start":367,"line_end":367,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(char::from_u32_detailed(0x1f331), Ok('🌱'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":29370,"byte_end":29431,"line_start":368,"line_end":368,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":29436,"byte_end":29443,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":37978,"byte_end":37984,"line_start":605,"line_end":605,"column_start":11,"column_end":17},"name":"StrExt","qualname":"::traits::StrExt","value":"StrExt: AsRef<str>","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" Adds `.utf8chars()` and `.utf16chars()` iterator constructors to `&str`.\n","sig":null,"attributes":[{"value":"/ Adds `.utf8chars()` and `.utf16chars()` iterator constructors to `&str`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":37891,"byte_end":37967,"line_start":604,"line_end":604,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":38065,"byte_end":38074,"line_start":607,"line_end":607,"column_start":8,"column_end":17},"name":"utf8chars","qualname":"::traits::StrExt::utf8chars","value":"pub fn utf8chars(&Self) -> Utf8Chars","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Equivalent to `.chars()` but produces `Utf8Char`s.\n","sig":null,"attributes":[{"value":"/ Equivalent to `.chars()` but produces `Utf8Char`s.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":38003,"byte_end":38057,"line_start":606,"line_end":606,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":38163,"byte_end":38173,"line_start":609,"line_end":609,"column_start":8,"column_end":18},"name":"utf16chars","qualname":"::traits::StrExt::utf16chars","value":"pub fn utf16chars(&Self) -> Utf16Chars","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Equivalent to `.chars()` but produces `Utf16Char`s.\n","sig":null,"attributes":[{"value":"/ Equivalent to `.chars()` but produces `Utf16Char`s.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":38100,"byte_end":38155,"line_start":608,"line_end":608,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":38269,"byte_end":38285,"line_start":611,"line_end":611,"column_start":8,"column_end":24},"name":"utf8char_indices","qualname":"::traits::StrExt::utf8char_indices","value":"pub fn utf8char_indices(&Self) -> Utf8CharIndices","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Equivalent to `.char_indices()` but produces `Utf8Char`s.\n","sig":null,"attributes":[{"value":"/ Equivalent to `.char_indices()` but produces `Utf8Char`s.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":38200,"byte_end":38261,"line_start":610,"line_end":610,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":38387,"byte_end":38404,"line_start":613,"line_end":613,"column_start":8,"column_end":25},"name":"utf16char_indices","qualname":"::traits::StrExt::utf16char_indices","value":"pub fn utf16char_indices(&Self) -> Utf16CharIndices","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Equivalent to `.char_indices()` but produces `Utf16Char`s.\n","sig":null,"attributes":[{"value":"/ Equivalent to `.char_indices()` but produces `Utf16Char`s.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":38317,"byte_end":38379,"line_start":612,"line_end":612,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39455,"byte_end":39462,"line_start":653,"line_end":653,"column_start":11,"column_end":18},"name":"IterExt","qualname":"::traits::IterExt","value":"IterExt: Iterator + Sized","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" Iterator methods that convert between `u8`s and `Utf8Char` or `u16`s and `Utf16Char`","sig":null,"attributes":[{"value":"/ Iterator methods that convert between `u8`s and `Utf8Char` or `u16`s and `Utf16Char`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39241,"byte_end":39329,"line_start":649,"line_end":649,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39330,"byte_end":39333,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ All the iterator adapters also accept iterators that produce references of","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39334,"byte_end":39412,"line_start":651,"line_end":651,"column_start":1,"column_end":79}},{"value":"/ the type they convert from.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39413,"byte_end":39444,"line_start":652,"line_end":652,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41509,"byte_end":41517,"line_start":710,"line_end":710,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::traits::IterExt::to_bytes","value":"pub fn to_bytes(Self) -> Utf8CharSplitter<Self::Item, Self> where\nSelf::Item: Borrow<Utf8Char>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf8Char`s or `&Utf8Char`s to an iterator of\n `u8`s.","sig":null,"attributes":[{"value":"/ Converts an iterator of `Utf8Char`s or `&Utf8Char`s to an iterator of","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39485,"byte_end":39558,"line_start":654,"line_end":654,"column_start":5,"column_end":78}},{"value":"/ `u8`s.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39563,"byte_end":39573,"line_start":655,"line_end":655,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39578,"byte_end":39581,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ Has the same effect as `.flat_map()` or `.flatten()`, but the returned","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39586,"byte_end":39660,"line_start":657,"line_end":657,"column_start":5,"column_end":79}},{"value":"/ iterator is ~40% faster.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39665,"byte_end":39693,"line_start":658,"line_end":658,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39698,"byte_end":39701,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ The iterator also implements `Read`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39706,"byte_end":39745,"line_start":660,"line_end":660,"column_start":5,"column_end":44}},{"value":"/ (when the `std` feature isn't disabled).  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39750,"byte_end":39796,"line_start":661,"line_end":661,"column_start":5,"column_end":51}},{"value":"/ Reading will never produce an error, and calls to `.read()` and `.next()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39801,"byte_end":39878,"line_start":662,"line_end":662,"column_start":5,"column_end":82}},{"value":"/ can be mixed.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39883,"byte_end":39900,"line_start":663,"line_end":663,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39905,"byte_end":39908,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ The exact number of bytes cannot be known in advance, but `size_hint()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39913,"byte_end":39988,"line_start":665,"line_end":665,"column_start":5,"column_end":80}},{"value":"/ gives the possible range.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39993,"byte_end":40022,"line_start":666,"line_end":666,"column_start":5,"column_end":34}},{"value":"/ (min: all remaining characters are ASCII, max: all require four bytes)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40027,"byte_end":40101,"line_start":667,"line_end":667,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40106,"byte_end":40109,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40114,"byte_end":40128,"line_start":669,"line_end":669,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40133,"byte_end":40136,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ From iterator of values:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40141,"byte_end":40169,"line_start":671,"line_end":671,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40174,"byte_end":40177,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40182,"byte_end":40189,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{IterExt, StrExt};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40194,"byte_end":40236,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40241,"byte_end":40244,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let iterator = \"foo\".utf8chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40249,"byte_end":40286,"line_start":676,"line_end":676,"column_start":5,"column_end":42}},{"value":"/ let mut bytes = [0; 4];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40291,"byte_end":40318,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/ for (u,dst) in iterator.to_bytes().zip(&mut bytes) {*dst=u;}","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40323,"byte_end":40387,"line_start":678,"line_end":678,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&bytes, b\"foo\\0\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40392,"byte_end":40425,"line_start":679,"line_end":679,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40430,"byte_end":40437,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40442,"byte_end":40445,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ From iterator of references:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40450,"byte_end":40482,"line_start":682,"line_end":682,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40487,"byte_end":40490,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{IterExt, StrExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40596,"byte_end":40648,"line_start":686,"line_end":686,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40653,"byte_end":40656,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let chars: Vec<Utf8Char> = \"💣 bomb 💣\".utf8chars().collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40661,"byte_end":40731,"line_start":688,"line_end":688,"column_start":5,"column_end":69}},{"value":"/ let bytes: Vec<u8> = chars.iter().to_bytes().collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40736,"byte_end":40795,"line_start":689,"line_end":689,"column_start":5,"column_end":64}},{"value":"/ let flat_map: Vec<u8> = chars.iter().flat_map(|u8c| *u8c ).collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40800,"byte_end":40873,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(bytes, flat_map);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40878,"byte_end":40910,"line_start":691,"line_end":691,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40915,"byte_end":40922,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40927,"byte_end":40930,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ `Read`ing from it:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40935,"byte_end":40957,"line_start":694,"line_end":694,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":40962,"byte_end":40965,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{IterExt, StrExt};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41071,"byte_end":41113,"line_start":698,"line_end":698,"column_start":5,"column_end":47}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41118,"byte_end":41140,"line_start":699,"line_end":699,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41145,"byte_end":41148,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let s = \"Ååh‽\";","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41153,"byte_end":41176,"line_start":701,"line_end":701,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(s.len(), 8);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41181,"byte_end":41208,"line_start":702,"line_end":702,"column_start":5,"column_end":32}},{"value":"/ let mut buf = [b'E'; 9];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41213,"byte_end":41241,"line_start":703,"line_end":703,"column_start":5,"column_end":33}},{"value":"/ let mut reader = s.utf8chars().to_bytes();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41246,"byte_end":41292,"line_start":704,"line_end":704,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(reader.read(&mut buf[..]).unwrap(), 8);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41297,"byte_end":41351,"line_start":705,"line_end":705,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(reader.read(&mut buf[..]).unwrap(), 0);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41356,"byte_end":41410,"line_start":706,"line_end":706,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(&buf[..8], s.as_bytes());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41415,"byte_end":41455,"line_start":707,"line_end":707,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(buf[8], b'E');","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41460,"byte_end":41489,"line_start":708,"line_end":708,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41494,"byte_end":41501,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42860,"byte_end":42868,"line_start":748,"line_end":748,"column_start":8,"column_end":16},"name":"to_units","qualname":"::traits::IterExt::to_units","value":"pub fn to_units(Self) -> Utf16CharSplitter<Self::Item, Self> where\nSelf::Item: Borrow<Utf16Char>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf16Char` (or `&Utf16Char`) to an iterator of\n `u16`s.","sig":null,"attributes":[{"value":"/ Converts an iterator of `Utf16Char` (or `&Utf16Char`) to an iterator of","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41602,"byte_end":41677,"line_start":712,"line_end":712,"column_start":5,"column_end":80}},{"value":"/ `u16`s.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41682,"byte_end":41693,"line_start":713,"line_end":713,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41698,"byte_end":41701,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ Has the same effect as `.flat_map()` or `.flatten()`, but the returned","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41706,"byte_end":41780,"line_start":715,"line_end":715,"column_start":5,"column_end":79}},{"value":"/ iterator is about twice as fast.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41785,"byte_end":41821,"line_start":716,"line_end":716,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41826,"byte_end":41829,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The exact number of units cannot be known in advance, but `size_hint()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41834,"byte_end":41909,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/ gives the possible range.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41914,"byte_end":41943,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41948,"byte_end":41951,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41956,"byte_end":41970,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41975,"byte_end":41978,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ From iterator of values:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":41983,"byte_end":42011,"line_start":723,"line_end":723,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42016,"byte_end":42019,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42024,"byte_end":42031,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{IterExt, StrExt};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42036,"byte_end":42078,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42083,"byte_end":42086,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let iterator = \"foo\".utf16chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42091,"byte_end":42129,"line_start":728,"line_end":728,"column_start":5,"column_end":43}},{"value":"/ let mut units = [0; 4];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42134,"byte_end":42161,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ for (u,dst) in iterator.to_units().zip(&mut units) {*dst=u;}","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42166,"byte_end":42230,"line_start":730,"line_end":730,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42235,"byte_end":42238,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(units, ['f' as u16, 'o' as u16, 'o' as u16, 0]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42243,"byte_end":42306,"line_start":732,"line_end":732,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42311,"byte_end":42318,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42323,"byte_end":42326,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ From iterator of references:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42331,"byte_end":42363,"line_start":735,"line_end":735,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42368,"byte_end":42371,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{IterExt, StrExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42477,"byte_end":42530,"line_start":739,"line_end":739,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42535,"byte_end":42538,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ // (💣 takes two units)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42543,"byte_end":42572,"line_start":741,"line_end":741,"column_start":5,"column_end":31}},{"value":"/ let chars: Vec<Utf16Char> = \"💣 bomb 💣\".utf16chars().collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42577,"byte_end":42649,"line_start":742,"line_end":742,"column_start":5,"column_end":71}},{"value":"/ let units: Vec<u16> = chars.iter().to_units().collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42654,"byte_end":42714,"line_start":743,"line_end":743,"column_start":5,"column_end":65}},{"value":"/ let flat_map: Vec<u16> = chars.iter().flat_map(|u16c| *u16c ).collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42719,"byte_end":42795,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42800,"byte_end":42803,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(units, flat_map);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42808,"byte_end":42840,"line_start":746,"line_end":746,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42845,"byte_end":42852,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45042,"byte_end":45054,"line_start":803,"line_end":803,"column_start":8,"column_end":20},"name":"to_utf8chars","qualname":"::traits::IterExt::to_utf8chars","value":"pub fn to_utf8chars(Self) -> Utf8CharMerger<Self::Item, Self> where\nSelf::Item: Borrow<u8>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Decodes bytes as UTF-8 and groups them into `Utf8Char`s","sig":null,"attributes":[{"value":"/ Decodes bytes as UTF-8 and groups them into `Utf8Char`s","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":42955,"byte_end":43014,"line_start":750,"line_end":750,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43019,"byte_end":43022,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ When errors (invalid values or sequences) are encountered,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43027,"byte_end":43089,"line_start":752,"line_end":752,"column_start":5,"column_end":67}},{"value":"/ it continues with the byte right after the start of the error sequence.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43094,"byte_end":43171,"line_start":753,"line_end":753,"column_start":5,"column_end":82}},{"value":"/ This is neither the most intelligent choiche (sometimes it is guaranteed to","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43176,"byte_end":43255,"line_start":754,"line_end":754,"column_start":5,"column_end":84}},{"value":"/  produce another error), nor the easiest to implement, but I believe it to","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43260,"byte_end":43338,"line_start":755,"line_end":755,"column_start":5,"column_end":83}},{"value":"/ be the most predictable.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43343,"byte_end":43371,"line_start":756,"line_end":756,"column_start":5,"column_end":33}},{"value":"/ It also means that ASCII characters are never hidden by errors.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43376,"byte_end":43443,"line_start":757,"line_end":757,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43448,"byte_end":43451,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43456,"byte_end":43470,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43475,"byte_end":43478,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Replace all errors with u+FFFD REPLACEMENT_CHARACTER:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43483,"byte_end":43540,"line_start":761,"line_end":761,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43545,"byte_end":43552,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{Utf8Char, IterExt};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43557,"byte_end":43601,"line_start":763,"line_end":763,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43606,"byte_end":43609,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [b'\\0'; 255];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43614,"byte_end":43645,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ let len = b\"foo\\xCFbar\".iter()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43650,"byte_end":43684,"line_start":766,"line_end":766,"column_start":5,"column_end":39}},{"value":"/     .to_utf8chars()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43689,"byte_end":43712,"line_start":767,"line_end":767,"column_start":5,"column_end":28}},{"value":"/     .flat_map(|r| r.unwrap_or(Utf8Char::from('\\u{FFFD}')).into_iter() )","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43717,"byte_end":43792,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/     .zip(&mut buf[..])","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43797,"byte_end":43823,"line_start":769,"line_end":769,"column_start":5,"column_end":31}},{"value":"/     .map(|(byte, dst)| *dst = byte )","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43828,"byte_end":43868,"line_start":770,"line_end":770,"column_start":5,"column_end":45}},{"value":"/     .count();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43873,"byte_end":43890,"line_start":771,"line_end":771,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43895,"byte_end":43898,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&buf[..len], \"foo\\u{FFFD}bar\".as_bytes());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43903,"byte_end":43960,"line_start":773,"line_end":773,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43965,"byte_end":43972,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43977,"byte_end":43980,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ Collect everything up until the first error into a string:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":43985,"byte_end":44047,"line_start":776,"line_end":776,"column_start":5,"column_end":67}},{"value":"/ use encode_unicode::iterator::Utf8CharMerger;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44153,"byte_end":44202,"line_start":779,"line_end":779,"column_start":5,"column_end":54}},{"value":"/ let mut good = String::new();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44207,"byte_end":44240,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/ for r in Utf8CharMerger::from(b\"foo\\xcc\\xbbbar\\xcc\\xddbaz\") {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44245,"byte_end":44310,"line_start":781,"line_end":781,"column_start":5,"column_end":70}},{"value":"/     if let Ok(uc) = r {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44315,"byte_end":44342,"line_start":782,"line_end":782,"column_start":5,"column_end":32}},{"value":"/         good.push_str(uc.as_str());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44347,"byte_end":44386,"line_start":783,"line_end":783,"column_start":5,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44391,"byte_end":44407,"line_start":784,"line_end":784,"column_start":5,"column_end":21}},{"value":"/         break;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44412,"byte_end":44430,"line_start":785,"line_end":785,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44435,"byte_end":44444,"line_start":786,"line_end":786,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44449,"byte_end":44454,"line_start":787,"line_end":787,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(good, \"foo̻bar\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44459,"byte_end":44492,"line_start":788,"line_end":788,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44497,"byte_end":44504,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44509,"byte_end":44512,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Abort decoding on error:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44517,"byte_end":44545,"line_start":791,"line_end":791,"column_start":5,"column_end":33}},{"value":"/ use encode_unicode::{IterExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44651,"byte_end":44695,"line_start":794,"line_end":794,"column_start":5,"column_end":49}},{"value":"/ use encode_unicode::error::{InvalidUtf8Slice, InvalidUtf8};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44700,"byte_end":44763,"line_start":795,"line_end":795,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44768,"byte_end":44771,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ let result = b\"ab\\0\\xe0\\xbc\\xa9 \\xf3\\x80\\x77\".iter()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44776,"byte_end":44832,"line_start":797,"line_end":797,"column_start":5,"column_end":61}},{"value":"/     .to_utf8chars()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44837,"byte_end":44860,"line_start":798,"line_end":798,"column_start":5,"column_end":28}},{"value":"/     .collect::<Result<String,InvalidUtf8Slice>>();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44865,"byte_end":44919,"line_start":799,"line_end":799,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44924,"byte_end":44927,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Err(InvalidUtf8Slice::Utf8(InvalidUtf8::NotAContinuationByte(2))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":44932,"byte_end":45022,"line_start":801,"line_end":801,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45027,"byte_end":45034,"line_start":802,"line_end":802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47079,"byte_end":47092,"line_start":852,"line_end":852,"column_start":8,"column_end":21},"name":"to_utf16chars","qualname":"::traits::IterExt::to_utf16chars","value":"pub fn to_utf16chars(Self) -> Utf16CharMerger<Self::Item, Self> where\nSelf::Item: Borrow<u16>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Decodes bytes as UTF-16 and groups them into `Utf16Char`s","sig":null,"attributes":[{"value":"/ Decodes bytes as UTF-16 and groups them into `Utf16Char`s","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45131,"byte_end":45192,"line_start":805,"line_end":805,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45197,"byte_end":45200,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ When errors (unmatched leading surrogates or unexpected trailing surrogates)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45205,"byte_end":45285,"line_start":807,"line_end":807,"column_start":5,"column_end":85}},{"value":"/ are encountered, an error is produced for every unit.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45290,"byte_end":45347,"line_start":808,"line_end":808,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45352,"byte_end":45355,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45360,"byte_end":45374,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45379,"byte_end":45382,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Replace errors with '�':","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45387,"byte_end":45417,"line_start":812,"line_end":812,"column_start":5,"column_end":33}},{"value":"/ use encode_unicode::{IterExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45523,"byte_end":45568,"line_start":815,"line_end":815,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45573,"byte_end":45576,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ let slice = &['a' as u16, 0xdf00, 0xd83c, 0xdca0][..];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45581,"byte_end":45639,"line_start":817,"line_end":817,"column_start":5,"column_end":63}},{"value":"/ let string = slice.iter()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45644,"byte_end":45673,"line_start":818,"line_end":818,"column_start":5,"column_end":34}},{"value":"/     .to_utf16chars()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45678,"byte_end":45702,"line_start":819,"line_end":819,"column_start":5,"column_end":29}},{"value":"/     .map(|r| r.unwrap_or(Utf16Char::from('\\u{fffd}')) ) // REPLACEMENT_CHARACTER","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45707,"byte_end":45791,"line_start":820,"line_end":820,"column_start":5,"column_end":89}},{"value":"/     .collect::<String>();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45796,"byte_end":45825,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45830,"byte_end":45833,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(string, \"a�🂠\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45838,"byte_end":45873,"line_start":823,"line_end":823,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45878,"byte_end":45885,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45890,"byte_end":45893,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45898,"byte_end":45905,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{IterExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45910,"byte_end":45955,"line_start":827,"line_end":827,"column_start":5,"column_end":50}},{"value":"/ use encode_unicode::error::Utf16PairError::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":45960,"byte_end":46009,"line_start":828,"line_end":828,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46014,"byte_end":46017,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let slice = [0xdcba, 0xdeff, 0xd8be, 0xdeee, 'Y' as u16, 0xdab1, 0xdab1];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46022,"byte_end":46099,"line_start":830,"line_end":830,"column_start":5,"column_end":82}},{"value":"/ let mut iter = slice.iter().to_utf16chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46104,"byte_end":46152,"line_start":831,"line_end":831,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(iter.size_hint(), (3, Some(7)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46157,"byte_end":46204,"line_start":832,"line_end":832,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(iter.next(), Some(Err(UnexpectedTrailingSurrogate)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46209,"byte_end":46277,"line_start":833,"line_end":833,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(Err(UnexpectedTrailingSurrogate)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46282,"byte_end":46350,"line_start":834,"line_end":834,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(Ok(Utf16Char::from('\\u{3faee}'))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46355,"byte_end":46423,"line_start":835,"line_end":835,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(Ok(Utf16Char::from('Y'))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46428,"byte_end":46488,"line_start":836,"line_end":836,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(iter.next(), Some(Err(UnmatchedLeadingSurrogate)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46493,"byte_end":46559,"line_start":837,"line_end":837,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(iter.next(), Some(Err(Incomplete)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46564,"byte_end":46615,"line_start":838,"line_end":838,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(iter.into_remaining_units().next(), None);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46620,"byte_end":46677,"line_start":839,"line_end":839,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46682,"byte_end":46689,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46694,"byte_end":46697,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ Search for a codepoint and return the codepoint index of the first match:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46702,"byte_end":46779,"line_start":842,"line_end":842,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46784,"byte_end":46791,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{IterExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46796,"byte_end":46841,"line_start":844,"line_end":844,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46846,"byte_end":46849,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let position = [0xd875, 0xdd4f, '≈' as u16, '2' as u16].iter()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46854,"byte_end":46922,"line_start":846,"line_end":846,"column_start":5,"column_end":71}},{"value":"/     .to_utf16chars()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46927,"byte_end":46951,"line_start":847,"line_end":847,"column_start":5,"column_end":29}},{"value":"/     .position(|r| r == Ok(Utf16Char::from('≈')) );","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":46956,"byte_end":47012,"line_start":848,"line_end":848,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47017,"byte_end":47020,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(position, Some(1));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47025,"byte_end":47059,"line_start":850,"line_end":850,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47064,"byte_end":47071,"line_start":851,"line_end":851,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48075,"byte_end":48083,"line_start":876,"line_end":876,"column_start":11,"column_end":19},"name":"SliceExt","qualname":"::traits::SliceExt","value":"SliceExt: Index<RangeFull>","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" Methods for iterating over `u8` and `u16` slices as UTF-8 or UTF-16 characters.","sig":null,"attributes":[{"value":"/ Methods for iterating over `u8` and `u16` slices as UTF-8 or UTF-16 characters.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47732,"byte_end":47815,"line_start":871,"line_end":871,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47816,"byte_end":47819,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ The iterators are slightly faster than the similar methods in [`IterExt`](trait.IterExt.html)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47820,"byte_end":47917,"line_start":873,"line_end":873,"column_start":1,"column_end":98}},{"value":"/ because they con \"push back\" items for free after errors and don't need a","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47918,"byte_end":47995,"line_start":874,"line_end":874,"column_start":1,"column_end":78}},{"value":"/ separate buffer that must be checked on every call to `.next()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47996,"byte_end":48064,"line_start":875,"line_end":875,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51152,"byte_end":51168,"line_start":943,"line_end":943,"column_start":8,"column_end":24},"name":"utf8char_indices","qualname":"::traits::SliceExt::utf8char_indices","value":"pub fn utf8char_indices(&Self) -> Utf8CharDecoder where\nSelf::Output: Borrow<[u8]>","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Decode `u8` slices as UTF-8 and iterate over the codepoints as `Utf8Char`s,","sig":null,"attributes":[{"value":"/ Decode `u8` slices as UTF-8 and iterate over the codepoints as `Utf8Char`s,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48108,"byte_end":48187,"line_start":877,"line_end":877,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48192,"byte_end":48195,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48200,"byte_end":48214,"line_start":879,"line_end":879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48219,"byte_end":48222,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ Get the index and error type of the first error:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48227,"byte_end":48279,"line_start":881,"line_end":881,"column_start":5,"column_end":57}},{"value":"/ use encode_unicode::{SliceExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48385,"byte_end":48430,"line_start":884,"line_end":884,"column_start":5,"column_end":50}},{"value":"/ use encode_unicode::error::InvalidUtf8Slice;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48435,"byte_end":48483,"line_start":885,"line_end":885,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48488,"byte_end":48491,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ let slice = b\"ab\\0\\xe0\\xbc\\xa9 \\xf3\\x80\\x77\";","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48496,"byte_end":48545,"line_start":887,"line_end":887,"column_start":5,"column_end":54}},{"value":"/ let result = slice.utf8char_indices()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48550,"byte_end":48591,"line_start":888,"line_end":888,"column_start":5,"column_end":46}},{"value":"/     .map(|(offset,r,length)| r.map_err(|e| (offset,e,length) ) )","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48596,"byte_end":48664,"line_start":889,"line_end":889,"column_start":5,"column_end":73}},{"value":"/     .collect::<Result<String,(usize,InvalidUtf8Slice,usize)>>();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48669,"byte_end":48737,"line_start":890,"line_end":890,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48742,"byte_end":48745,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Err((7, InvalidUtf8Slice::TooShort(4), 1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48750,"byte_end":48817,"line_start":892,"line_end":892,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48822,"byte_end":48829,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48834,"byte_end":48837,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48842,"byte_end":48849,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{SliceExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48854,"byte_end":48899,"line_start":896,"line_end":896,"column_start":5,"column_end":50}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48904,"byte_end":48930,"line_start":897,"line_end":897,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48935,"byte_end":48938,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ let slice = b\"\\xf0\\xbf\\xbf\\xbfXY\\xdd\\xbb\\xe1\\x80\\x99quux123\";","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48943,"byte_end":49008,"line_start":899,"line_end":899,"column_start":5,"column_end":70}},{"value":"/ let mut fixed_size = [Utf8Char::default(); 8];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49013,"byte_end":49063,"line_start":900,"line_end":900,"column_start":5,"column_end":55}},{"value":"/ for (cp_i, (byte_index, r, _)) in slice.utf8char_indices().enumerate().take(8) {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49068,"byte_end":49152,"line_start":901,"line_end":901,"column_start":5,"column_end":89}},{"value":"/     match r {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49157,"byte_end":49174,"line_start":902,"line_end":902,"column_start":5,"column_end":22}},{"value":"/         Ok(u8c) => fixed_size[cp_i] = u8c,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49179,"byte_end":49225,"line_start":903,"line_end":903,"column_start":5,"column_end":51}},{"value":"/         Err(e) => panic!(\"Invalid codepoint at index {} ({})\", cp_i, e.description()),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49230,"byte_end":49320,"line_start":904,"line_end":904,"column_start":5,"column_end":95}},{"value":"/     }","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49325,"byte_end":49334,"line_start":905,"line_end":905,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49339,"byte_end":49344,"line_start":906,"line_end":906,"column_start":5,"column_end":10}},{"value":"/ let chars = ['\\u{3ffff}', 'X', 'Y', '\\u{77b}', '\\u{1019}', 'q', 'u', 'u'];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49349,"byte_end":49427,"line_start":907,"line_end":907,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(fixed_size, chars);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49432,"byte_end":49466,"line_start":908,"line_end":908,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49471,"byte_end":49478,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49483,"byte_end":49486,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{SliceExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49592,"byte_end":49637,"line_start":913,"line_end":913,"column_start":5,"column_end":50}},{"value":"/ use encode_unicode::error::InvalidUtf8Slice::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49642,"byte_end":49693,"line_start":914,"line_end":914,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::{InvalidUtf8, InvalidUtf8FirstByte, InvalidCodepoint};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49698,"byte_end":49783,"line_start":915,"line_end":915,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49788,"byte_end":49791,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"\\xfa-\\xf4\\x8f\\xee\\xa1\\x8f-\\xed\\xa9\\x87\\xf0\\xcc\\xbb\";","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49796,"byte_end":49866,"line_start":917,"line_end":917,"column_start":5,"column_end":75}},{"value":"/ let mut errors = Vec::new();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49871,"byte_end":49903,"line_start":918,"line_end":918,"column_start":5,"column_end":37}},{"value":"/ let mut lengths = Vec::new();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49908,"byte_end":49941,"line_start":919,"line_end":919,"column_start":5,"column_end":38}},{"value":"/ let mut string = String::new();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49946,"byte_end":49981,"line_start":920,"line_end":920,"column_start":5,"column_end":40}},{"value":"/ for (offset,result,length) in bytes.utf8char_indices() {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":49986,"byte_end":50046,"line_start":921,"line_end":921,"column_start":5,"column_end":65}},{"value":"/     lengths.push((offset,length));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50051,"byte_end":50089,"line_start":922,"line_end":922,"column_start":5,"column_end":43}},{"value":"/     let c = result.unwrap_or_else(|error| {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50094,"byte_end":50141,"line_start":923,"line_end":923,"column_start":5,"column_end":52}},{"value":"/         errors.push((offset,error));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50146,"byte_end":50186,"line_start":924,"line_end":924,"column_start":5,"column_end":45}},{"value":"/         Utf8Char::from('\\u{fffd}') // replacement character","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50191,"byte_end":50254,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/     });","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50259,"byte_end":50270,"line_start":926,"line_end":926,"column_start":5,"column_end":16}},{"value":"/     string.push_str(c.as_str());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50275,"byte_end":50311,"line_start":927,"line_end":927,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50316,"byte_end":50321,"line_start":928,"line_end":928,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50326,"byte_end":50329,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(string, \"�-��\\u{e84f}-����\\u{33b}\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50334,"byte_end":50399,"line_start":930,"line_end":930,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(lengths, [(0,1), (1,1), (2,1), (3,1), (4,3), (7,1),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50404,"byte_end":50470,"line_start":931,"line_end":931,"column_start":5,"column_end":71}},{"value":"/                      (8,1), (9,1), (10,1), (11,1), (12,2)]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50475,"byte_end":50539,"line_start":932,"line_end":932,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(errors, [","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50544,"byte_end":50568,"line_start":933,"line_end":933,"column_start":5,"column_end":29}},{"value":"/     ( 0, Utf8(InvalidUtf8::FirstByte(InvalidUtf8FirstByte::TooLongSeqence))),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50573,"byte_end":50654,"line_start":934,"line_end":934,"column_start":5,"column_end":86}},{"value":"/     ( 2, Utf8(InvalidUtf8::NotAContinuationByte(2))),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50659,"byte_end":50716,"line_start":935,"line_end":935,"column_start":5,"column_end":62}},{"value":"/     ( 3, Utf8(InvalidUtf8::FirstByte(InvalidUtf8FirstByte::ContinuationByte))),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50721,"byte_end":50804,"line_start":936,"line_end":936,"column_start":5,"column_end":88}},{"value":"/     ( 8, Codepoint(InvalidCodepoint::Utf16Reserved)),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50809,"byte_end":50866,"line_start":937,"line_end":937,"column_start":5,"column_end":62}},{"value":"/     ( 9, Utf8(InvalidUtf8::FirstByte(InvalidUtf8FirstByte::ContinuationByte))),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50871,"byte_end":50954,"line_start":938,"line_end":938,"column_start":5,"column_end":88}},{"value":"/     (10, Utf8(InvalidUtf8::FirstByte(InvalidUtf8FirstByte::ContinuationByte))),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":50959,"byte_end":51042,"line_start":939,"line_end":939,"column_start":5,"column_end":88}},{"value":"/     (11, TooShort(4)), // (but it was not the last element returned!)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51047,"byte_end":51120,"line_start":940,"line_end":940,"column_start":5,"column_end":78}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51125,"byte_end":51132,"line_start":941,"line_end":941,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51137,"byte_end":51144,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53696,"byte_end":53713,"line_start":1004,"line_end":1004,"column_start":8,"column_end":25},"name":"utf16char_indices","qualname":"::traits::SliceExt::utf16char_indices","value":"pub fn utf16char_indices(&Self) -> Utf16CharDecoder where\nSelf::Output: Borrow<[u16]>","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Decode `u16` slices as UTF-16 and iterate over the codepoints as `Utf16Char`s,","sig":null,"attributes":[{"value":"/ Decode `u16` slices as UTF-16 and iterate over the codepoints as `Utf16Char`s,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51235,"byte_end":51317,"line_start":946,"line_end":946,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51322,"byte_end":51325,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ The iterator produces `(usize,Result<Utf16Char,Utf16Error>,usize)`,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51330,"byte_end":51401,"line_start":948,"line_end":948,"column_start":5,"column_end":76}},{"value":"/ and the slice is validated as you go.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51406,"byte_end":51447,"line_start":949,"line_end":949,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51452,"byte_end":51455,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ The first `usize` contains the offset from the start of the slice and","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51460,"byte_end":51533,"line_start":951,"line_end":951,"column_start":5,"column_end":78}},{"value":"/ the last `usize` contains the length of the codepoint or error.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51538,"byte_end":51605,"line_start":952,"line_end":952,"column_start":5,"column_end":72}},{"value":"/ The length is either 1 or 2, and always 1 for errors.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51610,"byte_end":51667,"line_start":953,"line_end":953,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51672,"byte_end":51675,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51680,"byte_end":51694,"line_start":955,"line_end":955,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51699,"byte_end":51702,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{SliceExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51808,"byte_end":51853,"line_start":959,"line_end":959,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51858,"byte_end":51861,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ let slice = &['a' as u16, 0xdf00, 0xd83c, 0xdca0][..];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51866,"byte_end":51924,"line_start":961,"line_end":961,"column_start":5,"column_end":63}},{"value":"/ let mut errors = Vec::new();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51929,"byte_end":51961,"line_start":962,"line_end":962,"column_start":5,"column_end":37}},{"value":"/ let string = slice.utf16char_indices().map(|(offset,r,_)| match r {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":51966,"byte_end":52037,"line_start":963,"line_end":963,"column_start":5,"column_end":76}},{"value":"/     Ok(u16c) => Utf8Char::from(u16c),","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52042,"byte_end":52083,"line_start":964,"line_end":964,"column_start":5,"column_end":46}},{"value":"/     Err(_) => {","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52088,"byte_end":52107,"line_start":965,"line_end":965,"column_start":5,"column_end":24}},{"value":"/         errors.push(offset);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52112,"byte_end":52144,"line_start":966,"line_end":966,"column_start":5,"column_end":37}},{"value":"/         Utf8Char::from('\\u{fffd}') // REPLACEMENT_CHARACTER","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52149,"byte_end":52212,"line_start":967,"line_end":967,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52217,"byte_end":52226,"line_start":968,"line_end":968,"column_start":5,"column_end":14}},{"value":"/ }).collect::<String>();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52231,"byte_end":52258,"line_start":969,"line_end":969,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52263,"byte_end":52266,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(string, \"a�🂠\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52271,"byte_end":52306,"line_start":971,"line_end":971,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(errors, [1]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52311,"byte_end":52339,"line_start":972,"line_end":972,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52344,"byte_end":52351,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52356,"byte_end":52359,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ Search for a codepoint and return its unit and codepoint index.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52364,"byte_end":52431,"line_start":975,"line_end":975,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52436,"byte_end":52443,"line_start":976,"line_end":976,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{SliceExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52448,"byte_end":52494,"line_start":977,"line_end":977,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52499,"byte_end":52502,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ let slice = [0xd875,/*'𝕏'*/ 0xdd4f, '≈' as u16, '2' as u16];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52507,"byte_end":52576,"line_start":979,"line_end":979,"column_start":5,"column_end":69}},{"value":"/ let position = slice.utf16char_indices()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52581,"byte_end":52625,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/     .enumerate()","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52630,"byte_end":52650,"line_start":981,"line_end":981,"column_start":5,"column_end":25}},{"value":"/     .find(|&(_,(_,r,_))| r == Ok(Utf16Char::from('≈')) )","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52655,"byte_end":52717,"line_start":982,"line_end":982,"column_start":5,"column_end":65}},{"value":"/     .map(|(codepoint, (offset, _, _))| (codepoint, offset) );","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52722,"byte_end":52787,"line_start":983,"line_end":983,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52792,"byte_end":52795,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(position, Some((1,2)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52800,"byte_end":52838,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52843,"byte_end":52850,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52855,"byte_end":52858,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ Error types:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52863,"byte_end":52879,"line_start":988,"line_end":988,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52884,"byte_end":52891,"line_start":989,"line_end":989,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{SliceExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52896,"byte_end":52942,"line_start":990,"line_end":990,"column_start":5,"column_end":51}},{"value":"/ use encode_unicode::error::Utf16PairError::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":52947,"byte_end":52996,"line_start":991,"line_end":991,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53001,"byte_end":53004,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ let slice = [0xdcba, 0xdeff, 0xd8be, 0xdeee, 'λ' as u16, 0xdab1, 0xdab1];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53009,"byte_end":53087,"line_start":993,"line_end":993,"column_start":5,"column_end":82}},{"value":"/ let mut iter = slice.utf16char_indices();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53092,"byte_end":53137,"line_start":994,"line_end":994,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(iter.next(), Some((0, Err(UnexpectedTrailingSurrogate), 1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53142,"byte_end":53218,"line_start":995,"line_end":995,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(iter.next(), Some((1, Err(UnexpectedTrailingSurrogate), 1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53223,"byte_end":53299,"line_start":996,"line_end":996,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(iter.next(), Some((2, Ok(Utf16Char::from('\\u{3faee}')), 2)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53304,"byte_end":53380,"line_start":997,"line_end":997,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(iter.next(), Some((4, Ok(Utf16Char::from('λ')), 1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53385,"byte_end":53454,"line_start":998,"line_end":998,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some((5, Err(UnmatchedLeadingSurrogate), 1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53459,"byte_end":53533,"line_start":999,"line_end":999,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(iter.next(), Some((6, Err(Incomplete), 1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53538,"byte_end":53597,"line_start":1000,"line_end":1000,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53602,"byte_end":53636,"line_start":1001,"line_end":1001,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(iter.as_slice(), [])","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53641,"byte_end":53676,"line_start":1002,"line_end":1002,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53681,"byte_end":53688,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":55698,"byte_end":55706,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Utf8Char","qualname":"::utf8_char::Utf8Char","value":"Utf8Char {  }","parent":null,"children":[{"krate":0,"index":1038}],"decl_id":null,"docs":" An unicode codepoint stored as UTF-8.","sig":null,"attributes":[{"value":"/ An unicode codepoint stored as UTF-8.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":55573,"byte_end":55614,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":55615,"byte_end":55618,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It can be borrowed as a `str`, and has the same size as `char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":55619,"byte_end":55686,"line_start":43,"line_end":43,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66500,"byte_end":66514,"line_start":402,"line_end":402,"column_start":12,"column_end":26},"name":"from_str_start","qualname":"<Utf8Char>::from_str_start","value":"pub fn from_str_start(&str) -> Result<(Self, usize), EmptyStrError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from the first codepoint in a `str`.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` from the first codepoint in a `str`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":65854,"byte_end":65915,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":65920,"byte_end":65923,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the `str` is empty.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":65928,"byte_end":65971,"line_start":389,"line_end":389,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":65976,"byte_end":65979,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":65984,"byte_end":65998,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66003,"byte_end":66006,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66011,"byte_end":66018,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf8Char;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66023,"byte_end":66056,"line_start":394,"line_end":394,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66061,"byte_end":66064,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_str_start(\"a\"), Ok((Utf8Char::from('a'),1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66069,"byte_end":66144,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Utf8Char::from_str_start(\"ab\"), Ok((Utf8Char::from('a'),1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66149,"byte_end":66225,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Utf8Char::from_str_start(\"🂠 \"), Ok((Utf8Char::from('🂠'),4)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66230,"byte_end":66312,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Utf8Char::from_str_start(\"é\"), Ok((Utf8Char::from('e'),1)));// 'e'+u301 combining mark","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66317,"byte_end":66420,"line_start":399,"line_end":399,"column_start":5,"column_end":107}},{"value":"/ assert!(Utf8Char::from_str_start(\"\").is_err());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66425,"byte_end":66476,"line_start":400,"line_end":400,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66481,"byte_end":66488,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67971,"byte_end":67987,"line_start":436,"line_end":436,"column_start":12,"column_end":28},"name":"from_slice_start","qualname":"<Utf8Char>::from_slice_start","value":"pub fn from_slice_start(&[u8]) -> Result<(Self, usize), InvalidUtf8Slice>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` of the first codepoint in an UTF-8 slice.  \n Also returns the length of the UTF-8 sequence for the codepoint.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` of the first codepoint in an UTF-8 slice.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66778,"byte_end":66846,"line_start":411,"line_end":411,"column_start":5,"column_end":73}},{"value":"/ Also returns the length of the UTF-8 sequence for the codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66851,"byte_end":66919,"line_start":412,"line_end":412,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66924,"byte_end":66927,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ If the slice is from a `str`, use `::from_str_start()` to skip UTF-8 validation.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":66932,"byte_end":67016,"line_start":414,"line_end":414,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67021,"byte_end":67024,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67029,"byte_end":67041,"line_start":416,"line_end":416,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67046,"byte_end":67049,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` if the slice is empty, doesn't start with a valid","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67054,"byte_end":67124,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"/ UTF-8 sequence or is too short for the sequence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67129,"byte_end":67181,"line_start":419,"line_end":419,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67186,"byte_end":67189,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67194,"byte_end":67208,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67213,"byte_end":67216,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67221,"byte_end":67228,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf8Char;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67233,"byte_end":67266,"line_start":424,"line_end":424,"column_start":5,"column_end":38}},{"value":"/ use encode_unicode::error::InvalidUtf8Slice::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67271,"byte_end":67322,"line_start":425,"line_end":425,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::InvalidUtf8::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67327,"byte_end":67373,"line_start":426,"line_end":426,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67378,"byte_end":67381,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[b'A', b'B', b'C']), Ok((Utf8Char::from('A'),1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67386,"byte_end":67479,"line_start":428,"line_end":428,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[0xdd, 0xbb]), Ok((Utf8Char::from('\\u{77b}'),2)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67484,"byte_end":67577,"line_start":429,"line_end":429,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67582,"byte_end":67585,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[]), Err(TooShort(1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67590,"byte_end":67656,"line_start":431,"line_end":431,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[0xf0, 0x99]), Err(TooShort(4)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67661,"byte_end":67737,"line_start":432,"line_end":432,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[0xee, b'F', 0x80]), Err(Utf8(NotAContinuationByte(1))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67742,"byte_end":67842,"line_start":433,"line_end":433,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[0xee, 0x99, 0x0f]), Err(Utf8(NotAContinuationByte(2))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67847,"byte_end":67947,"line_start":434,"line_end":434,"column_start":5,"column_end":105}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":67952,"byte_end":67959,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68528,"byte_end":68554,"line_start":449,"line_end":449,"column_start":19,"column_end":45},"name":"from_slice_start_unchecked","qualname":"<Utf8Char>::from_slice_start_unchecked","value":"pub unsafe fn from_slice_start_unchecked(&[u8]) -> (Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" A `from_slice_start()` that doesn't validate the codepoint.","sig":null,"attributes":[{"value":"/ A `from_slice_start()` that doesn't validate the codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68256,"byte_end":68319,"line_start":443,"line_end":443,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68324,"byte_end":68327,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68332,"byte_end":68344,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68349,"byte_end":68352,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The slice must be non-empty and start with a valid UTF-8 codepoint.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68357,"byte_end":68430,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ Invalid or incomplete values might cause reads of uninitalized memory.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68435,"byte_end":68509,"line_start":448,"line_end":448,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70069,"byte_end":70079,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Utf8Char>::from_array","value":"pub fn from_array([u8; ]) -> Result<Self, InvalidUtf8Array>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a byte array after validating it.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` from a byte array after validating it.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68817,"byte_end":68880,"line_start":455,"line_end":455,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68885,"byte_end":68888,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The codepoint must start at the first byte.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68893,"byte_end":68942,"line_start":457,"line_end":457,"column_start":5,"column_end":54}},{"value":"/ Unused bytes are set to zero by this function and so can be anything.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":68947,"byte_end":69020,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69025,"byte_end":69028,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69033,"byte_end":69045,"line_start":460,"line_end":460,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69050,"byte_end":69053,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` if the array doesn't start with a valid UTF-8 sequence.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69058,"byte_end":69134,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69139,"byte_end":69142,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69147,"byte_end":69161,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69166,"byte_end":69169,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69174,"byte_end":69181,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf8Char;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69186,"byte_end":69219,"line_start":467,"line_end":467,"column_start":5,"column_end":38}},{"value":"/ use encode_unicode::error::InvalidUtf8Array::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69224,"byte_end":69275,"line_start":468,"line_end":468,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::InvalidUtf8::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69280,"byte_end":69326,"line_start":469,"line_end":469,"column_start":5,"column_end":51}},{"value":"/ use encode_unicode::error::InvalidCodepoint::*;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69331,"byte_end":69382,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69387,"byte_end":69390,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_array([b'A', 0, 0, 0]), Ok(Utf8Char::from('A')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69395,"byte_end":69474,"line_start":472,"line_end":472,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(Utf8Char::from_array([0xf4, 0x8b, 0xbb, 0xbb]), Ok(Utf8Char::from('\\u{10befb}')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69479,"byte_end":69576,"line_start":473,"line_end":473,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(Utf8Char::from_array([b'A', b'B', b'C', b'D']), Ok(Utf8Char::from('A')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69581,"byte_end":69669,"line_start":474,"line_end":474,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(Utf8Char::from_array([0, 0, 0xcc, 0xbb]), Ok(Utf8Char::from('\\0')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69674,"byte_end":69757,"line_start":475,"line_end":475,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69762,"byte_end":69765,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_array([0xef, b'F', 0x80, 0x80]), Err(Utf8(NotAContinuationByte(1))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69770,"byte_end":69869,"line_start":477,"line_end":477,"column_start":5,"column_end":104}},{"value":"/ assert_eq!(Utf8Char::from_array([0xc1, 0x80, 0, 0]), Err(Utf8(OverLong)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69874,"byte_end":69952,"line_start":478,"line_end":478,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(Utf8Char::from_array([0xf7, 0xaa, 0x99, 0x88]), Err(Codepoint(TooHigh)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":69957,"byte_end":70045,"line_start":479,"line_end":479,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70050,"byte_end":70057,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70920,"byte_end":70940,"line_start":501,"line_end":501,"column_start":19,"column_end":39},"name":"from_array_unchecked","qualname":"<Utf8Char>::from_array_unchecked","value":"pub unsafe fn from_array_unchecked([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Zero-cost constructor.","sig":null,"attributes":[{"value":"/ Zero-cost constructor.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70663,"byte_end":70689,"line_start":493,"line_end":493,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70694,"byte_end":70697,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70702,"byte_end":70714,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70719,"byte_end":70722,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Must contain a valid codepoint starting at the first byte, with the","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70727,"byte_end":70798,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/ unused bytes zeroed.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70803,"byte_end":70829,"line_start":498,"line_end":498,"column_start":5,"column_end":31}},{"value":"/ Bad values can easily lead to undefined behavior.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70834,"byte_end":70887,"line_start":499,"line_end":499,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":70892,"byte_end":70901,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71425,"byte_end":71435,"line_start":519,"line_end":519,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Utf8Char>::from_ascii","value":"pub fn from_ascii(u8) -> Result<Self, NonAsciiError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a single byte.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` from a single byte.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71007,"byte_end":71051,"line_start":504,"line_end":504,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71056,"byte_end":71059,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ The byte must be an ASCII character.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71064,"byte_end":71104,"line_start":506,"line_end":506,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71109,"byte_end":71112,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71117,"byte_end":71129,"line_start":508,"line_end":508,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71134,"byte_end":71137,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Returns `NonAsciiError` if the byte greater than 127.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71142,"byte_end":71199,"line_start":510,"line_end":510,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71204,"byte_end":71207,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71212,"byte_end":71226,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71231,"byte_end":71234,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71239,"byte_end":71246,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::Utf8Char;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71251,"byte_end":71286,"line_start":515,"line_end":515,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Utf8Char::from_ascii(b'a').unwrap(), 'a');","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71291,"byte_end":71348,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"/ assert!(Utf8Char::from_ascii(128).is_err());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71353,"byte_end":71401,"line_start":517,"line_end":517,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71406,"byte_end":71413,"line_start":518,"line_end":518,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71884,"byte_end":71904,"line_start":533,"line_end":533,"column_start":19,"column_end":39},"name":"from_ascii_unchecked","qualname":"<Utf8Char>::from_ascii_unchecked","value":"pub unsafe fn from_ascii_unchecked(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a single byte without checking that it's a\n valid codepoint on its own, which is only true for ASCII characters.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` from a single byte without checking that it's a","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71629,"byte_end":71701,"line_start":526,"line_end":526,"column_start":5,"column_end":77}},{"value":"/ valid codepoint on its own, which is only true for ASCII characters.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71706,"byte_end":71778,"line_start":527,"line_end":527,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71783,"byte_end":71786,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71791,"byte_end":71803,"line_start":529,"line_end":529,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71808,"byte_end":71811,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ The byte must be less than 128.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71816,"byte_end":71851,"line_start":531,"line_end":531,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71856,"byte_end":71865,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":72170,"byte_end":72173,"line_start":542,"line_end":542,"column_start":12,"column_end":15},"name":"len","qualname":"<Utf8Char>::len","value":"pub fn len(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes this character needs.","sig":null,"attributes":[{"value":"/ The number of bytes this character needs.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":71981,"byte_end":72026,"line_start":537,"line_end":537,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":72031,"byte_end":72034,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Is between 1 and 4 (inclusive) and identical to `.as_ref().len()` or","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":72039,"byte_end":72111,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/ `.as_char().len_utf8()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":72116,"byte_end":72144,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":72149,"byte_end":72158,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73452,"byte_end":73460,"line_start":568,"line_end":568,"column_start":12,"column_end":20},"name":"is_ascii","qualname":"<Utf8Char>::is_ascii","value":"pub fn is_ascii(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the codepoint is an ASCII character.\n","sig":null,"attributes":[{"value":"/ Checks that the codepoint is an ASCII character.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73388,"byte_end":73440,"line_start":567,"line_end":567,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73707,"byte_end":73727,"line_start":575,"line_end":575,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<Utf8Char>::eq_ignore_ascii_case","value":"pub fn eq_ignore_ascii_case(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that two characters are an ASCII case-insensitive match.","sig":null,"attributes":[{"value":"/ Checks that two characters are an ASCII case-insensitive match.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73517,"byte_end":73584,"line_start":571,"line_end":571,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73589,"byte_end":73592,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Is equivalent to `a.to_ascii_lowercase() == b.to_ascii_lowercase()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73597,"byte_end":73669,"line_start":573,"line_end":573,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73674,"byte_end":73695,"line_start":574,"line_end":574,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74106,"byte_end":74124,"line_start":584,"line_end":584,"column_start":12,"column_end":30},"name":"to_ascii_uppercase","qualname":"<Utf8Char>::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII upper case equivalent.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII upper case equivalent.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73894,"byte_end":73956,"line_start":579,"line_end":579,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73961,"byte_end":73964,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":73969,"byte_end":74023,"line_start":581,"line_end":581,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74028,"byte_end":74068,"line_start":582,"line_end":582,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74073,"byte_end":74094,"line_start":583,"line_end":583,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74438,"byte_end":74456,"line_start":594,"line_end":594,"column_start":12,"column_end":30},"name":"to_ascii_lowercase","qualname":"<Utf8Char>::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII lower case equivalent.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII lower case equivalent.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74226,"byte_end":74288,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74293,"byte_end":74296,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74301,"byte_end":74355,"line_start":591,"line_end":591,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74360,"byte_end":74400,"line_start":592,"line_end":592,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74405,"byte_end":74426,"line_start":593,"line_end":593,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74793,"byte_end":74813,"line_start":605,"line_end":605,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<Utf8Char>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII upper case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII upper case equivalent in-place.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74558,"byte_end":74629,"line_start":599,"line_end":599,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74634,"byte_end":74637,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74642,"byte_end":74696,"line_start":601,"line_end":601,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74701,"byte_end":74741,"line_start":602,"line_end":602,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74746,"byte_end":74755,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74760,"byte_end":74781,"line_start":604,"line_end":604,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75117,"byte_end":75137,"line_start":614,"line_end":614,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<Utf8Char>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII lower case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII lower case equivalent in-place.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74882,"byte_end":74953,"line_start":608,"line_end":608,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74958,"byte_end":74961,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":74966,"byte_end":75020,"line_start":610,"line_end":610,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75025,"byte_end":75065,"line_start":611,"line_end":611,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75070,"byte_end":75079,"line_start":612,"line_end":612,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75084,"byte_end":75105,"line_start":613,"line_end":613,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75252,"byte_end":75259,"line_start":619,"line_end":619,"column_start":12,"column_end":19},"name":"to_char","qualname":"<Utf8Char>::to_char","value":"pub fn to_char(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Convert from UTF-8 to UTF-32\n","sig":null,"attributes":[{"value":"/ Convert from UTF-8 to UTF-32","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75208,"byte_end":75240,"line_start":618,"line_end":618,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75613,"byte_end":75621,"line_start":630,"line_end":630,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<Utf8Char>::to_slice","value":"pub fn to_slice(Self, &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Write the internal representation to a slice,\n and then returns the number of bytes written.","sig":null,"attributes":[{"value":"/ Write the internal representation to a slice,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75306,"byte_end":75355,"line_start":622,"line_end":622,"column_start":5,"column_end":54}},{"value":"/ and then returns the number of bytes written.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75360,"byte_end":75409,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75414,"byte_end":75417,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75422,"byte_end":75434,"line_start":625,"line_end":625,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75439,"byte_end":75442,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Will panic the buffer is too small;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75447,"byte_end":75486,"line_start":627,"line_end":627,"column_start":5,"column_end":44}},{"value":"/ You can get the required length from `.len()`,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75491,"byte_end":75541,"line_start":628,"line_end":628,"column_start":5,"column_end":55}},{"value":"/ but a buffer of length four is always large enough.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75546,"byte_end":75601,"line_start":629,"line_end":629,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75928,"byte_end":75936,"line_start":638,"line_end":638,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Utf8Char>::to_array","value":"pub fn to_array(Self) -> ([u8; ], usize)","parent":null,"children":[],"decl_id":null,"docs":" Expose the internal array and the number of used bytes.\n","sig":null,"attributes":[{"value":"/ Expose the internal array and the number of used bytes.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":75857,"byte_end":75916,"line_start":637,"line_end":637,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":76140,"byte_end":76146,"line_start":644,"line_end":644,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8Char>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return a `str` view of the array the codepoint is stored as.","sig":null,"attributes":[{"value":"/ Return a `str` view of the array the codepoint is stored as.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":76006,"byte_end":76070,"line_start":641,"line_end":641,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":76075,"byte_end":76078,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Is an unambiguous version of `.as_ref()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":76083,"byte_end":76128,"line_start":643,"line_end":643,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":76898,"byte_end":76910,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"Utf8Iterator","qualname":"::utf8_iterators::Utf8Iterator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read or iterate over the bytes of the UTF-8 representation of a codepoint.\n","sig":null,"attributes":[{"value":"/ Read or iterate over the bytes of the UTF-8 representation of a codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":76791,"byte_end":76869,"line_start":21,"line_end":21,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80551,"byte_end":80561,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"iter_bytes","qualname":"::utf8_iterators::iter_bytes","value":"pub fn iter_bytes<U: Borrow<Utf8Char>, I: IntoIterator<Item = U>>(I)\n-> Utf8CharSplitter<U, I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf8Char` (or `&Utf8Char`)\n to an iterator of `u8`s.  \n Is equivalent to calling `.flat_map()` on the original iterator,\n but the returned iterator is ~40% faster.","sig":null,"attributes":[{"value":"/ Converts an iterator of `Utf8Char` (or `&Utf8Char`)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78683,"byte_end":78738,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ to an iterator of `u8`s.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78739,"byte_end":78769,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ Is equivalent to calling `.flat_map()` on the original iterator,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78770,"byte_end":78838,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/ but the returned iterator is ~40% faster.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78839,"byte_end":78884,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78885,"byte_end":78888,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The iterator also implements `Read` (if the `std` feature isn't disabled).","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78889,"byte_end":78967,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ Reading will never produce an error, and calls to `.read()` and `.next()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78968,"byte_end":79045,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ can be mixed.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79046,"byte_end":79063,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79064,"byte_end":79067,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The exact number of bytes cannot be known in advance, but `size_hint()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79068,"byte_end":79143,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ gives the possible range.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79144,"byte_end":79173,"line_start":97,"line_end":97,"column_start":1,"column_end":30}},{"value":"/ (min: all remaining characters are ASCII, max: all require four bytes)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79174,"byte_end":79248,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79249,"byte_end":79252,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79253,"byte_end":79267,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79268,"byte_end":79271,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ From iterator of values:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79272,"byte_end":79300,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79301,"byte_end":79304,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79305,"byte_end":79312,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ use encode_unicode::{iter_bytes, CharExt};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79313,"byte_end":79359,"line_start":105,"line_end":105,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79360,"byte_end":79363,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let iterator = \"foo\".chars().map(|c| c.to_utf8() );","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79364,"byte_end":79419,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"/ let mut bytes = [0; 4];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79420,"byte_end":79447,"line_start":108,"line_end":108,"column_start":1,"column_end":28}},{"value":"/ for (u,dst) in iter_bytes(iterator).zip(&mut bytes) {*dst=u;}","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79448,"byte_end":79513,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(&bytes, b\"foo\\0\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79514,"byte_end":79547,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79548,"byte_end":79555,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79556,"byte_end":79559,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ From iterator of references:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79560,"byte_end":79592,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79593,"byte_end":79596,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ use encode_unicode::{iter_bytes, CharExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79690,"byte_end":79746,"line_start":117,"line_end":117,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79747,"byte_end":79750,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ let chars: Vec<Utf8Char> = \"💣 bomb 💣\".chars().map(|c| c.to_utf8() ).collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79751,"byte_end":79839,"line_start":119,"line_end":119,"column_start":1,"column_end":83}},{"value":"/ let bytes: Vec<u8> = iter_bytes(&chars).collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79840,"byte_end":79894,"line_start":120,"line_end":120,"column_start":1,"column_end":55}},{"value":"/ let flat_map: Vec<u8> = chars.iter().flat_map(|u8c| *u8c ).collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79895,"byte_end":79968,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(bytes, flat_map);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":79969,"byte_end":80001,"line_start":122,"line_end":122,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80002,"byte_end":80009,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80010,"byte_end":80013,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ `Read`ing from it:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80014,"byte_end":80036,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80037,"byte_end":80040,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ use encode_unicode::{iter_bytes, CharExt};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80134,"byte_end":80180,"line_start":129,"line_end":129,"column_start":1,"column_end":47}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80181,"byte_end":80203,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80204,"byte_end":80207,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ let s = \"Ååh‽\";","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80208,"byte_end":80231,"line_start":132,"line_end":132,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(s.len(), 8);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80232,"byte_end":80259,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/ let mut buf = [b'E'; 9];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80260,"byte_end":80288,"line_start":134,"line_end":134,"column_start":1,"column_end":29}},{"value":"/ let mut reader = iter_bytes(s.chars().map(|c| c.to_utf8() ));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80289,"byte_end":80354,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(reader.read(&mut buf[..]).unwrap(), 8);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80355,"byte_end":80409,"line_start":136,"line_end":136,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(reader.read(&mut buf[..]).unwrap(), 0);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80410,"byte_end":80464,"line_start":137,"line_end":137,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(&buf[..8], s.as_bytes());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80465,"byte_end":80505,"line_start":138,"line_end":138,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(buf[8], b'E');","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80506,"byte_end":80535,"line_start":139,"line_end":139,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80536,"byte_end":80543,"line_start":140,"line_end":140,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80843,"byte_end":80859,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"Utf8CharSplitter","qualname":"::utf8_iterators::Utf8CharSplitter","value":"Utf8CharSplitter {  }","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"decl_id":null,"docs":" The iterator type returned by `iter_bytes()`","sig":null,"attributes":[{"value":"/ The iterator type returned by `iter_bytes()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80723,"byte_end":80771,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80772,"byte_end":80775,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ See its documentation for details.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80776,"byte_end":80814,"line_start":148,"line_end":148,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81445,"byte_end":81455,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf8CharSplitter<U, I>>::into_inner","value":"pub fn into_inner(Self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extracts the source iterator.","sig":null,"attributes":[{"value":"/ Extracts the source iterator.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81200,"byte_end":81233,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81238,"byte_end":81241,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Note that `iter_bytes(iter.into_inner())` is not a no-op:  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81246,"byte_end":81309,"line_start":163,"line_end":163,"column_start":5,"column_end":68}},{"value":"/ If the last returned byte from `next()` was not an ASCII by,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81314,"byte_end":81378,"line_start":164,"line_end":164,"column_start":5,"column_end":69}},{"value":"/ the remaining bytes of that codepoint is lost.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81383,"byte_end":81433,"line_start":165,"line_end":165,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":83975,"byte_end":83990,"line_start":238,"line_end":238,"column_start":12,"column_end":27},"name":"Utf8CharIndices","qualname":"::utf8_iterators::Utf8CharIndices","value":"Utf8CharIndices {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079}],"decl_id":null,"docs":" An iterator over the `Utf8Char` of a string slice, and their positions.","sig":null,"attributes":[{"value":"/ An iterator over the `Utf8Char` of a string slice, and their positions.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":83751,"byte_end":83826,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":83827,"byte_end":83830,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the `utf8char_indices() method from [`StrExt`] trait. See its documentation for more.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":83831,"byte_end":83946,"line_start":236,"line_end":236,"column_start":1,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84599,"byte_end":84605,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8CharIndices>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source `str`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84210,"byte_end":84256,"line_start":248,"line_end":248,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84261,"byte_end":84264,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84269,"byte_end":84283,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84288,"byte_end":84291,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84296,"byte_end":84303,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{StrExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84308,"byte_end":84351,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/ let mut iter = \"abc\".utf8char_indices();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84356,"byte_end":84400,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(iter.next_back(), Some((2, Utf8Char::from('c'))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84405,"byte_end":84470,"line_start":255,"line_end":255,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(iter.next(), Some((0, Utf8Char::from('a'))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84475,"byte_end":84535,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(iter.as_str(), \"b\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84540,"byte_end":84575,"line_start":257,"line_end":257,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84580,"byte_end":84587,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86410,"byte_end":86419,"line_start":310,"line_end":310,"column_start":12,"column_end":21},"name":"Utf8Chars","qualname":"::utf8_iterators::Utf8Chars","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf8Char`.\n","sig":null,"attributes":[{"value":"/ An iterator over the codepoints in a `str` represented as `Utf8Char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86308,"byte_end":86381,"line_start":308,"line_end":308,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86978,"byte_end":86984,"line_start":328,"line_end":328,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8Chars>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source `str`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86606,"byte_end":86652,"line_start":317,"line_end":317,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86657,"byte_end":86660,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86665,"byte_end":86679,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86684,"byte_end":86687,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86692,"byte_end":86699,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{StrExt, Utf8Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86704,"byte_end":86747,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/ let mut iter = \"abc\".utf8chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86752,"byte_end":86789,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(iter.next(), Some(Utf8Char::from('a')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86794,"byte_end":86849,"line_start":324,"line_end":324,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(iter.next_back(), Some(Utf8Char::from('c')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86854,"byte_end":86914,"line_start":325,"line_end":325,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(iter.as_str(), \"b\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86919,"byte_end":86954,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86959,"byte_end":86966,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":89165,"byte_end":89174,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"Utf16Char","qualname":"::utf16_char::Utf16Char","value":"Utf16Char {  }","parent":null,"children":[{"krate":0,"index":1091}],"decl_id":null,"docs":" An unicode codepoint stored as UTF-16.","sig":null,"attributes":[{"value":"/ An unicode codepoint stored as UTF-16.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":89032,"byte_end":89074,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":89075,"byte_end":89078,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It can be borrowed as an `u16` slice, and has the same size as `char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":89079,"byte_end":89153,"line_start":44,"line_end":44,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":101425,"byte_end":101439,"line_start":435,"line_end":435,"column_start":12,"column_end":26},"name":"from_str_start","qualname":"<Utf16Char>::from_str_start","value":"pub fn from_str_start(&str) -> Result<(Self, usize), EmptyStrError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from the first codepoint in a string slice,\n converting from UTF-8 to UTF-16.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from the first codepoint in a string slice,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100591,"byte_end":100660,"line_start":416,"line_end":416,"column_start":5,"column_end":74}},{"value":"/ converting from UTF-8 to UTF-16.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100665,"byte_end":100701,"line_start":417,"line_end":417,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100706,"byte_end":100709,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The returned `usize` is the number of UTF-8 bytes used from the str,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100714,"byte_end":100786,"line_start":419,"line_end":419,"column_start":5,"column_end":77}},{"value":"/ and not the number of UTF-16 units.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100791,"byte_end":100830,"line_start":420,"line_end":420,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100835,"byte_end":100838,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the `str` is empty.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100843,"byte_end":100886,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100891,"byte_end":100894,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100899,"byte_end":100913,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100918,"byte_end":100921,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100926,"byte_end":100933,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf16Char;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100938,"byte_end":100972,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100977,"byte_end":100980,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf16Char::from_str_start(\"a\"), Ok((Utf16Char::from('a'),1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100985,"byte_end":101062,"line_start":429,"line_end":429,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(Utf16Char::from_str_start(\"ab\"), Ok((Utf16Char::from('a'),1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":101067,"byte_end":101145,"line_start":430,"line_end":430,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(Utf16Char::from_str_start(\"🂠 \"), Ok((Utf16Char::from('🂠'),4)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":101150,"byte_end":101234,"line_start":431,"line_end":431,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(Utf16Char::from_str_start(\"é\"), Ok((Utf16Char::from('e'),1)));// 'e'+u301 combining mark","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":101239,"byte_end":101344,"line_start":432,"line_end":432,"column_start":5,"column_end":109}},{"value":"/ assert!(Utf16Char::from_str_start(\"\").is_err());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":101349,"byte_end":101401,"line_start":433,"line_end":433,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":101406,"byte_end":101413,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103413,"byte_end":103429,"line_start":471,"line_end":471,"column_start":12,"column_end":28},"name":"from_slice_start","qualname":"<Utf16Char>::from_slice_start","value":"pub fn from_slice_start(&[u16]) -> Result<(Self, usize), InvalidUtf16Slice>","parent":null,"children":[],"decl_id":null,"docs":" Validate and store the first UTF-16 codepoint in the slice.\n Also return how many units were needed.\n","sig":null,"attributes":[{"value":"/ Validate and store the first UTF-16 codepoint in the slice.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103290,"byte_end":103353,"line_start":469,"line_end":469,"column_start":5,"column_end":68}},{"value":"/ Also return how many units were needed.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103358,"byte_end":103401,"line_start":470,"line_end":470,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103908,"byte_end":103934,"line_start":483,"line_end":483,"column_start":19,"column_end":45},"name":"from_slice_start_unchecked","qualname":"<Utf16Char>::from_slice_start_unchecked","value":"pub unsafe fn from_slice_start_unchecked(&[u16]) -> (Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Store the first UTF-16 codepoint of the slice.","sig":null,"attributes":[{"value":"/ Store the first UTF-16 codepoint of the slice.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103677,"byte_end":103727,"line_start":477,"line_end":477,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103732,"byte_end":103735,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103740,"byte_end":103752,"line_start":479,"line_end":479,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103757,"byte_end":103760,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ The slice must be non-empty and start with a valid UTF-16 codepoint.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103765,"byte_end":103839,"line_start":481,"line_end":481,"column_start":5,"column_end":79}},{"value":"/ The length of the slice is never checked.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":103844,"byte_end":103889,"line_start":482,"line_end":482,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105062,"byte_end":105072,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Utf16Char>::from_array","value":"pub fn from_array([u16; ]) -> Result<Self, InvalidUtf16Array>","parent":null,"children":[],"decl_id":null,"docs":" Validate and store an UTF-16 array as returned from `char.to_utf16_array()`.","sig":null,"attributes":[{"value":"/ Validate and store an UTF-16 array as returned from `char.to_utf16_array()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104210,"byte_end":104290,"line_start":491,"line_end":491,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104295,"byte_end":104298,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104303,"byte_end":104317,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104322,"byte_end":104325,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104330,"byte_end":104337,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf16Char;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104342,"byte_end":104376,"line_start":496,"line_end":496,"column_start":5,"column_end":39}},{"value":"/ use encode_unicode::error::InvalidUtf16Array;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104381,"byte_end":104430,"line_start":497,"line_end":497,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104435,"byte_end":104438,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf16Char::from_array(['x' as u16, 'y' as u16]), Ok(Utf16Char::from('x')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104443,"byte_end":104533,"line_start":499,"line_end":499,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(Utf16Char::from_array(['睷' as u16, 0]), Ok(Utf16Char::from('睷')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104538,"byte_end":104623,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(Utf16Char::from_array([0xda6f, 0xdcde]), Ok(Utf16Char::from('\\u{abcde}')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104628,"byte_end":104718,"line_start":501,"line_end":501,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(Utf16Char::from_array([0xf111, 0xdbad]), Ok(Utf16Char::from('\\u{f111}')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104723,"byte_end":104812,"line_start":502,"line_end":502,"column_start":5,"column_end":94}},{"value":"/ assert_eq!(Utf16Char::from_array([0xdaaf, 0xdaaf]), Err(InvalidUtf16Array::SecondIsNotTrailingSurrogate));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104817,"byte_end":104927,"line_start":503,"line_end":503,"column_start":5,"column_end":115}},{"value":"/ assert_eq!(Utf16Char::from_array([0xdcac, 0x9000]), Err(InvalidUtf16Array::FirstIsTrailingSurrogate));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":104932,"byte_end":105038,"line_start":504,"line_end":504,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105043,"byte_end":105050,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105949,"byte_end":105969,"line_start":525,"line_end":525,"column_start":19,"column_end":39},"name":"from_array_unchecked","qualname":"<Utf16Char>::from_array_unchecked","value":"pub unsafe fn from_array_unchecked([u16; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from an array as returned from `char.to_utf16_array()`.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from an array as returned from `char.to_utf16_array()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105543,"byte_end":105624,"line_start":517,"line_end":517,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105629,"byte_end":105632,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105637,"byte_end":105649,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105654,"byte_end":105657,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ The units must form a valid codepoint, and the second unit must be 0","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105662,"byte_end":105734,"line_start":521,"line_end":521,"column_start":5,"column_end":77}},{"value":"/ when a surrogate pair is not required.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105739,"byte_end":105781,"line_start":522,"line_end":522,"column_start":5,"column_end":47}},{"value":"/ Violating this can easily lead to undefined behavior, although unlike","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105786,"byte_end":105859,"line_start":523,"line_end":523,"column_start":5,"column_end":78}},{"value":"/ `char` bad `Utf16Char`s simply existing is not immediately UB.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":105864,"byte_end":105930,"line_start":524,"line_end":524,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106132,"byte_end":106142,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"name":"from_tuple","qualname":"<Utf16Char>::from_tuple","value":"pub fn from_tuple((u16, Option<u16>)) -> Result<Self, InvalidUtf16Tuple>","parent":null,"children":[],"decl_id":null,"docs":" Validate and store a UTF-16 pair as returned from `char.to_utf16_tuple()`.\n","sig":null,"attributes":[{"value":"/ Validate and store a UTF-16 pair as returned from `char.to_utf16_tuple()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106042,"byte_end":106120,"line_start":528,"line_end":528,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106637,"byte_end":106657,"line_start":541,"line_end":541,"column_start":19,"column_end":39},"name":"from_tuple_unchecked","qualname":"<Utf16Char>::from_tuple_unchecked","value":"pub unsafe fn from_tuple_unchecked((u16, Option<u16>)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a tuple as returned from `char.to_utf16_tuple()`.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from a tuple as returned from `char.to_utf16_tuple()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106326,"byte_end":106406,"line_start":534,"line_end":534,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106411,"byte_end":106414,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106419,"byte_end":106431,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106436,"byte_end":106439,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The units must form a valid codepoint with the second being 0 when a","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106444,"byte_end":106516,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/ surrogate pair is not required.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106521,"byte_end":106556,"line_start":539,"line_end":539,"column_start":5,"column_end":40}},{"value":"/ Violating this can easily lead to undefined behavior.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106561,"byte_end":106618,"line_start":540,"line_end":540,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107431,"byte_end":107439,"line_start":562,"line_end":562,"column_start":12,"column_end":20},"name":"from_bmp","qualname":"<Utf16Char>::from_bmp","value":"pub fn from_bmp(u16) -> Result<Self, NonBMPError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a single unit.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from a single unit.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106765,"byte_end":106810,"line_start":544,"line_end":544,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106815,"byte_end":106818,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Codepoints < '\\u{1_0000}' (which fit in a `u16`) are part of the basic","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106823,"byte_end":106897,"line_start":546,"line_end":546,"column_start":5,"column_end":79}},{"value":"/ multilingual plane unless they are reserved for surrogate pairs.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106902,"byte_end":106970,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106975,"byte_end":106978,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":106983,"byte_end":106995,"line_start":549,"line_end":549,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107000,"byte_end":107003,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Returns `NonBMPError` if the unit is in the range `0xd800..0xe000`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107008,"byte_end":107078,"line_start":551,"line_end":551,"column_start":5,"column_end":75}},{"value":"/ (which means that it's part of a surrogat pair)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107083,"byte_end":107134,"line_start":552,"line_end":552,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107139,"byte_end":107142,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107147,"byte_end":107161,"line_start":554,"line_end":554,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107166,"byte_end":107169,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107174,"byte_end":107181,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::Utf16Char;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107186,"byte_end":107222,"line_start":557,"line_end":557,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(Utf16Char::from_bmp(0x40).unwrap(), '@');","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107227,"byte_end":107283,"line_start":558,"line_end":558,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Utf16Char::from_bmp('ø' as u16).unwrap(), 'ø');","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107288,"byte_end":107352,"line_start":559,"line_end":559,"column_start":5,"column_end":67}},{"value":"/ assert!(Utf16Char::from_bmp(0xdddd).is_err());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107357,"byte_end":107407,"line_start":560,"line_end":560,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107412,"byte_end":107419,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108016,"byte_end":108034,"line_start":578,"line_end":578,"column_start":19,"column_end":37},"name":"from_bmp_unchecked","qualname":"<Utf16Char>::from_bmp_unchecked","value":"pub unsafe fn from_bmp_unchecked(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a single unit without checking that it's a\n valid codepoint on its own.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from a single unit without checking that it's a","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107657,"byte_end":107730,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ valid codepoint on its own.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107735,"byte_end":107766,"line_start":570,"line_end":570,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107771,"byte_end":107774,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107779,"byte_end":107791,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107796,"byte_end":107799,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ The unit must be less than 0xd800 or greater than 0xdfff.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107804,"byte_end":107865,"line_start":574,"line_end":574,"column_start":5,"column_end":66}},{"value":"/ In other words, not part of a surrogate pair.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107870,"byte_end":107921,"line_start":575,"line_end":575,"column_start":5,"column_end":56}},{"value":"/ Violating this can easily lead to undefined behavior.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107926,"byte_end":107983,"line_start":576,"line_end":576,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":107988,"byte_end":107997,"line_start":577,"line_end":577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108482,"byte_end":108488,"line_start":591,"line_end":591,"column_start":12,"column_end":18},"name":"is_bmp","qualname":"<Utf16Char>::is_bmp","value":"pub fn is_bmp(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the codepoint is in the basic multilingual plane.","sig":null,"attributes":[{"value":"/ Checks that the codepoint is in the basic multilingual plane.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108122,"byte_end":108187,"line_start":581,"line_end":581,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108192,"byte_end":108195,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108200,"byte_end":108214,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108219,"byte_end":108226,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::Utf16Char;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108231,"byte_end":108267,"line_start":585,"line_end":585,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(Utf16Char::from('e').is_bmp(), true);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108272,"byte_end":108324,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Utf16Char::from('€').is_bmp(), true);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108329,"byte_end":108383,"line_start":587,"line_end":587,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Utf16Char::from('𝔼').is_bmp(), false);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108388,"byte_end":108444,"line_start":588,"line_end":588,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108449,"byte_end":108456,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108461,"byte_end":108470,"line_start":590,"line_end":590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108728,"byte_end":108731,"line_start":600,"line_end":600,"column_start":12,"column_end":15},"name":"len","qualname":"<Utf16Char>::len","value":"pub fn len(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of units this character is made up of.","sig":null,"attributes":[{"value":"/ The number of units this character is made up of.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108544,"byte_end":108597,"line_start":595,"line_end":595,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108602,"byte_end":108605,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Is either 1 or 2 and identical to `.as_char().len_utf16()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108610,"byte_end":108672,"line_start":597,"line_end":597,"column_start":5,"column_end":67}},{"value":"/ or `.as_ref().len()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108677,"byte_end":108702,"line_start":598,"line_end":598,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108707,"byte_end":108716,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108951,"byte_end":108959,"line_start":607,"line_end":607,"column_start":12,"column_end":20},"name":"is_ascii","qualname":"<Utf16Char>::is_ascii","value":"pub fn is_ascii(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the codepoint is an ASCII character.\n","sig":null,"attributes":[{"value":"/ Checks that the codepoint is an ASCII character.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108873,"byte_end":108925,"line_start":605,"line_end":605,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":108930,"byte_end":108939,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109206,"byte_end":109226,"line_start":614,"line_end":614,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<Utf16Char>::eq_ignore_ascii_case","value":"pub fn eq_ignore_ascii_case(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that two characters are an ASCII case-insensitive match.","sig":null,"attributes":[{"value":"/ Checks that two characters are an ASCII case-insensitive match.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109016,"byte_end":109083,"line_start":610,"line_end":610,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109088,"byte_end":109091,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Is equivalent to `a.to_ascii_lowercase() == b.to_ascii_lowercase()`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109096,"byte_end":109168,"line_start":612,"line_end":612,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109173,"byte_end":109194,"line_start":613,"line_end":613,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109545,"byte_end":109563,"line_start":622,"line_end":622,"column_start":12,"column_end":30},"name":"to_ascii_uppercase","qualname":"<Utf16Char>::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII upper case equivalent.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII upper case equivalent.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109333,"byte_end":109395,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109400,"byte_end":109403,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109408,"byte_end":109462,"line_start":619,"line_end":619,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109467,"byte_end":109507,"line_start":620,"line_end":620,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109512,"byte_end":109533,"line_start":621,"line_end":621,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109945,"byte_end":109963,"line_start":632,"line_end":632,"column_start":12,"column_end":30},"name":"to_ascii_lowercase","qualname":"<Utf16Char>::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII lower case equivalent.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII lower case equivalent.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109733,"byte_end":109795,"line_start":627,"line_end":627,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109800,"byte_end":109803,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109808,"byte_end":109862,"line_start":629,"line_end":629,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109867,"byte_end":109907,"line_start":630,"line_end":630,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":109912,"byte_end":109933,"line_start":631,"line_end":631,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110354,"byte_end":110374,"line_start":642,"line_end":642,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<Utf16Char>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII upper case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII upper case equivalent in-place.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110133,"byte_end":110204,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110209,"byte_end":110212,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110217,"byte_end":110271,"line_start":639,"line_end":639,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110276,"byte_end":110316,"line_start":640,"line_end":640,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110321,"byte_end":110342,"line_start":641,"line_end":641,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110661,"byte_end":110681,"line_start":650,"line_end":650,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<Utf16Char>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII lower case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII lower case equivalent in-place.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110440,"byte_end":110511,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110516,"byte_end":110519,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110524,"byte_end":110578,"line_start":647,"line_end":647,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110583,"byte_end":110623,"line_start":648,"line_end":648,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110628,"byte_end":110649,"line_start":649,"line_end":649,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110794,"byte_end":110801,"line_start":655,"line_end":655,"column_start":12,"column_end":19},"name":"to_char","qualname":"<Utf16Char>::to_char","value":"pub fn to_char(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Convert from UTF-16 to UTF-32\n","sig":null,"attributes":[{"value":"/ Convert from UTF-16 to UTF-32","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110749,"byte_end":110782,"line_start":654,"line_end":654,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111147,"byte_end":111155,"line_start":665,"line_end":665,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<Utf16Char>::to_slice","value":"pub fn to_slice(Self, &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Write the internal representation to a slice,\n and then returns the number of `u16`s written.","sig":null,"attributes":[{"value":"/ Write the internal representation to a slice,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110848,"byte_end":110897,"line_start":658,"line_end":658,"column_start":5,"column_end":54}},{"value":"/ and then returns the number of `u16`s written.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110902,"byte_end":110952,"line_start":659,"line_end":659,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110957,"byte_end":110960,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110965,"byte_end":110977,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/ Will panic the buffer is too small;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":110982,"byte_end":111021,"line_start":662,"line_end":662,"column_start":5,"column_end":44}},{"value":"/ You can get the required length from `.len()`,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111026,"byte_end":111076,"line_start":663,"line_end":663,"column_start":5,"column_end":55}},{"value":"/ but a buffer of length two is always large enough.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111081,"byte_end":111135,"line_start":664,"line_end":664,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111711,"byte_end":111719,"line_start":679,"line_end":679,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Utf16Char>::to_array","value":"pub fn to_array(Self) -> [u16; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the character represented as an array of two units.","sig":null,"attributes":[{"value":"/ Get the character represented as an array of two units.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111548,"byte_end":111607,"line_start":675,"line_end":675,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111612,"byte_end":111615,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ The second `u16` is zero for codepoints that fit in one unit.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111620,"byte_end":111685,"line_start":677,"line_end":677,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111690,"byte_end":111699,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111843,"byte_end":111851,"line_start":684,"line_end":684,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Utf16Char>::to_tuple","value":"pub fn to_tuple(Self) -> (u16, Option<u16>)","parent":null,"children":[],"decl_id":null,"docs":" The second `u16` is used for surrogate pairs.\n","sig":null,"attributes":[{"value":"/ The second `u16` is used for surrogate pairs.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111768,"byte_end":111817,"line_start":682,"line_end":682,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":111822,"byte_end":111831,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":112691,"byte_end":112704,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"Utf16Iterator","qualname":"::utf16_iterators::Utf16Iterator","value":"Utf16Iterator {  }","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" Iterate over the units of the UTF-16 representation of a codepoint.\n","sig":null,"attributes":[{"value":"/ Iterate over the units of the UTF-16 representation of a codepoint.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":112591,"byte_end":112662,"line_start":20,"line_end":20,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115394,"byte_end":115404,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"iter_units","qualname":"::utf16_iterators::iter_units","value":"pub fn iter_units<U: Borrow<Utf16Char>, I: IntoIterator<Item = U>>(I)\n-> Utf16CharSplitter<U, I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf16Char` (or `&Utf16Char`)\n to an iterator of `u16`s.  \n Is equivalent to calling `.flat_map()` on the original iterator,\n but the returned iterator is about twice as fast.","sig":null,"attributes":[{"value":"/ Converts an iterator of `Utf16Char` (or `&Utf16Char`)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114235,"byte_end":114292,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ to an iterator of `u16`s.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114293,"byte_end":114324,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/ Is equivalent to calling `.flat_map()` on the original iterator,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114325,"byte_end":114393,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/ but the returned iterator is about twice as fast.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114394,"byte_end":114447,"line_start":73,"line_end":73,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114448,"byte_end":114451,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The exact number of units cannot be known in advance, but `size_hint()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114452,"byte_end":114527,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ gives the possible range.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114528,"byte_end":114557,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114558,"byte_end":114561,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114562,"byte_end":114576,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114577,"byte_end":114580,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ From iterator of values:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114581,"byte_end":114609,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114610,"byte_end":114613,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114614,"byte_end":114621,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use encode_unicode::{iter_units, CharExt};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114622,"byte_end":114668,"line_start":83,"line_end":83,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114669,"byte_end":114672,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let iterator = \"foo\".chars().map(|c| c.to_utf16() );","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114673,"byte_end":114729,"line_start":85,"line_end":85,"column_start":1,"column_end":57}},{"value":"/ let mut units = [0; 4];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114730,"byte_end":114757,"line_start":86,"line_end":86,"column_start":1,"column_end":28}},{"value":"/ for (u,dst) in iter_units(iterator).zip(&mut units) {*dst=u;}","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114758,"byte_end":114823,"line_start":87,"line_end":87,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(units, ['f' as u16, 'o' as u16, 'o' as u16, 0]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114824,"byte_end":114887,"line_start":88,"line_end":88,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114888,"byte_end":114895,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114896,"byte_end":114899,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ From iterator of references:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114900,"byte_end":114932,"line_start":91,"line_end":91,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":114933,"byte_end":114936,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ use encode_unicode::{iter_units, CharExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115030,"byte_end":115087,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115088,"byte_end":115091,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // (💣 takes two units)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115092,"byte_end":115121,"line_start":97,"line_end":97,"column_start":1,"column_end":27}},{"value":"/ let chars: Vec<Utf16Char> = \"💣 bomb 💣\".chars().map(|c| c.to_utf16() ).collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115122,"byte_end":115212,"line_start":98,"line_end":98,"column_start":1,"column_end":85}},{"value":"/ let units: Vec<u16> = iter_units(&chars).collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115213,"byte_end":115268,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ let flat_map: Vec<u16> = chars.iter().flat_map(|u16c| *u16c ).collect();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115269,"byte_end":115345,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(units, flat_map);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115346,"byte_end":115378,"line_start":101,"line_end":101,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115379,"byte_end":115386,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115653,"byte_end":115670,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"Utf16CharSplitter","qualname":"::utf16_iterators::Utf16CharSplitter","value":"Utf16CharSplitter {  }","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" The iterator type returned by `iter_units()`\n","sig":null,"attributes":[{"value":"/ The iterator type returned by `iter_units()`","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115576,"byte_end":115624,"line_start":108,"line_end":108,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":116258,"byte_end":116268,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf16CharSplitter<U, I>>::into_inner","value":"pub fn into_inner(Self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extracts the source iterator.","sig":null,"attributes":[{"value":"/ Extracts the source iterator.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":116024,"byte_end":116057,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":116062,"byte_end":116065,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Note that `iter_units(iter.into_inner())` is not a no-op:  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":116070,"byte_end":116133,"line_start":123,"line_end":123,"column_start":5,"column_end":68}},{"value":"/ If the last returned unit from `next()` was a leading surrogate,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":116138,"byte_end":116206,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/ the trailing surrogate is lost.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":116211,"byte_end":116246,"line_start":125,"line_end":125,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117330,"byte_end":117346,"line_start":158,"line_end":158,"column_start":12,"column_end":28},"name":"Utf16CharIndices","qualname":"::utf16_iterators::Utf16CharIndices","value":"Utf16CharIndices {  }","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124}],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf16Char`.\n","sig":null,"attributes":[{"value":"/ An iterator over the codepoints in a `str` represented as `Utf16Char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117227,"byte_end":117301,"line_start":156,"line_end":156,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117963,"byte_end":117969,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf16CharIndices>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source `str`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117570,"byte_end":117616,"line_start":168,"line_end":168,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117621,"byte_end":117624,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117629,"byte_end":117643,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117648,"byte_end":117651,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117656,"byte_end":117663,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{StrExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117668,"byte_end":117712,"line_start":173,"line_end":173,"column_start":5,"column_end":49}},{"value":"/ let mut iter = \"abc\".utf16char_indices();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117717,"byte_end":117762,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(iter.next_back(), Some((2, Utf16Char::from('c'))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117767,"byte_end":117833,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(iter.next(), Some((0, Utf16Char::from('a'))));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117838,"byte_end":117899,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(iter.as_str(), \"b\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117904,"byte_end":117939,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117944,"byte_end":117951,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119652,"byte_end":119662,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"Utf16Chars","qualname":"::utf16_iterators::Utf16Chars","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf16Char`.\n","sig":null,"attributes":[{"value":"/ An iterator over the codepoints in a `str` represented as `Utf16Char`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119549,"byte_end":119623,"line_start":226,"line_end":226,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120231,"byte_end":120237,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf16Chars>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source `str`.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119855,"byte_end":119901,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119906,"byte_end":119909,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119914,"byte_end":119928,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119933,"byte_end":119936,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119941,"byte_end":119948,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{StrExt, Utf16Char};","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119953,"byte_end":119997,"line_start":240,"line_end":240,"column_start":5,"column_end":49}},{"value":"/ let mut iter = \"abc\".utf16chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120002,"byte_end":120040,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(iter.next(), Some(Utf16Char::from('a')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120045,"byte_end":120101,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(iter.next_back(), Some(Utf16Char::from('c')));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120106,"byte_end":120167,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(iter.as_str(), \"b\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120172,"byte_end":120207,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120212,"byte_end":120219,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122301,"byte_end":122315,"line_start":39,"line_end":39,"column_start":12,"column_end":26},"name":"Utf8CharMerger","qualname":"::decoding_iterators::Utf8CharMerger","value":"Utf8CharMerger {  }","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140}],"decl_id":null,"docs":" Decodes UTF-8 characters from a byte iterator into `Utf8Char`s.","sig":null,"attributes":[{"value":"/ Decodes UTF-8 characters from a byte iterator into `Utf8Char`s.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122074,"byte_end":122141,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122142,"byte_end":122145,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See [`IterExt::to_utf8chars()`](../trait.IterExt.html#tymethod.to_utf8chars)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122146,"byte_end":122226,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ for examples and error handling.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122227,"byte_end":122263,"line_start":37,"line_end":37,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":124085,"byte_end":124095,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf8CharMerger<B, I>>::into_inner","value":"pub fn into_inner(Self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extract the inner iterator.","sig":null,"attributes":[{"value":"/ Extract the inner iterator.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122888,"byte_end":122919,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122924,"byte_end":122927,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If the last item produced by `.next()` was an `Err`,","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122932,"byte_end":122988,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/ up to three following bytes might be missing.  ","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122993,"byte_end":123044,"line_start":60,"line_end":60,"column_start":5,"column_end":56}},{"value":"/ The exact number of missing bytes for each error type should not be relied on.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123049,"byte_end":123131,"line_start":61,"line_end":61,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123136,"byte_end":123139,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123144,"byte_end":123158,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123163,"byte_end":123166,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Three bytes swallowed:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123171,"byte_end":123197,"line_start":65,"line_end":65,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123202,"byte_end":123209,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123214,"byte_end":123248,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let mut merger = b\"\\xf4\\xa1\\xb2FS\".iter().to_utf8chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123253,"byte_end":123314,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/ assert!(merger.next().unwrap().is_err());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123319,"byte_end":123364,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/ let mut inner: std::slice::Iter<u8> = merger.into_inner();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123369,"byte_end":123431,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(inner.next(), Some(&b'S')); // b'\\xa1', b'\\xb2' and b'F' disappeared","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123436,"byte_end":123519,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123524,"byte_end":123531,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123536,"byte_end":123539,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ All bytes present:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123544,"byte_end":123566,"line_start":74,"line_end":74,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123571,"byte_end":123578,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123583,"byte_end":123617,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ let mut merger = b\"\\xb0FS\".iter().to_utf8chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123622,"byte_end":123675,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/ assert!(merger.next().unwrap().is_err());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123680,"byte_end":123725,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(merger.into_inner().next(), Some(&b'F'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123730,"byte_end":123786,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123791,"byte_end":123798,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123803,"byte_end":123806,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Two bytes missing:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123811,"byte_end":123833,"line_start":82,"line_end":82,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123838,"byte_end":123845,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123850,"byte_end":123884,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"/ let mut merger = b\"\\xe0\\x80\\x80FS\".iter().to_utf8chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123889,"byte_end":123950,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/ assert!(merger.next().unwrap().is_err());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":123955,"byte_end":124000,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(merger.into_inner().next(), Some(&b'F'));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":124005,"byte_end":124061,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":124066,"byte_end":124073,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130113,"byte_end":130128,"line_start":225,"line_end":225,"column_start":12,"column_end":27},"name":"Utf8CharDecoder","qualname":"::decoding_iterators::Utf8CharDecoder","value":"Utf8CharDecoder {  }","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"decl_id":null,"docs":" An [`Utf8CharMerger`](struct.Utf8CharMerger.html) that also produces\n offsets and lengths, but can only iterate over slices.","sig":null,"attributes":[{"value":"/ An [`Utf8CharMerger`](struct.Utf8CharMerger.html) that also produces","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":129812,"byte_end":129884,"line_start":219,"line_end":219,"column_start":1,"column_end":73}},{"value":"/ offsets and lengths, but can only iterate over slices.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":129885,"byte_end":129943,"line_start":220,"line_end":220,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":129944,"byte_end":129947,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ See [`SliceExt::utf8char_indices()`](../trait.SliceExt.html#tymethod.utf8char_indices)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":129948,"byte_end":130038,"line_start":222,"line_end":222,"column_start":1,"column_end":91}},{"value":"/ for examples and error handling.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130039,"byte_end":130075,"line_start":223,"line_end":223,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130783,"byte_end":130791,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Utf8CharDecoder>::as_slice","value":"pub fn as_slice(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source slice.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source slice.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130357,"byte_end":130403,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130408,"byte_end":130411,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130416,"byte_end":130430,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130435,"byte_end":130438,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Unlike `Utf8CharMerger::into_inner()`, bytes directly after an error","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130443,"byte_end":130515,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ are never swallowed:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130520,"byte_end":130544,"line_start":240,"line_end":240,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130549,"byte_end":130556,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::SliceExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130561,"byte_end":130596,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/ let mut iter = b\"\\xf4\\xa1\\xb2FS\".utf8char_indices();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130601,"byte_end":130657,"line_start":243,"line_end":243,"column_start":5,"column_end":61}},{"value":"/ assert!(iter.next().unwrap().1.is_err());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130662,"byte_end":130707,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(iter.as_slice(), b\"\\xa1\\xb2FS\");","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130712,"byte_end":130759,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130764,"byte_end":130771,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133467,"byte_end":133482,"line_start":319,"line_end":319,"column_start":12,"column_end":27},"name":"Utf16CharMerger","qualname":"::decoding_iterators::Utf16CharMerger","value":"Utf16CharMerger {  }","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"decl_id":null,"docs":" Decodes UTF-16 characters from a `u16` iterator into `Utf16Char`s.","sig":null,"attributes":[{"value":"/ Decodes UTF-16 characters from a `u16` iterator into `Utf16Char`s.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133235,"byte_end":133305,"line_start":314,"line_end":314,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133306,"byte_end":133309,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ See [`IterExt::to_utf16chars()`](../trait.IterExt.html#tymethod.to_utf16chars)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133310,"byte_end":133392,"line_start":316,"line_end":316,"column_start":1,"column_end":83}},{"value":"/ for examples and error handling.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133393,"byte_end":133429,"line_start":317,"line_end":317,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135060,"byte_end":135070,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf16CharMerger<B, I>>::into_inner","value":"pub fn into_inner(Self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extract the inner iterator.","sig":null,"attributes":[{"value":"/ Extract the inner iterator.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133909,"byte_end":133940,"line_start":331,"line_end":331,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133945,"byte_end":133948,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the last item produced was an `Err`, the first unit might be missing.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133953,"byte_end":134029,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134034,"byte_end":134037,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134042,"byte_end":134056,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134061,"byte_end":134064,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Unit right after an error missing","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134069,"byte_end":134106,"line_start":337,"line_end":337,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134111,"byte_end":134118,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134123,"byte_end":134157,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/ # use encode_unicode::error::Utf16PairError;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134162,"byte_end":134210,"line_start":340,"line_end":340,"column_start":5,"column_end":53}},{"value":"/ let mut merger = [0xd901, 'F' as u16, 'S' as u16].iter().to_utf16chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134215,"byte_end":134292,"line_start":341,"line_end":341,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(merger.next(), Some(Err(Utf16PairError::UnmatchedLeadingSurrogate)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134297,"byte_end":134381,"line_start":342,"line_end":342,"column_start":5,"column_end":89}},{"value":"/ let mut inner: std::slice::Iter<u16> = merger.into_inner();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134386,"byte_end":134449,"line_start":343,"line_end":343,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(inner.next(), Some('S' as u16).as_ref()); // 'F' was consumed by Utf16CharMerger","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134454,"byte_end":134549,"line_start":344,"line_end":344,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134554,"byte_end":134561,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134566,"byte_end":134569,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Error that doesn't swallow any units","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134574,"byte_end":134614,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134619,"byte_end":134626,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134631,"byte_end":134665,"line_start":349,"line_end":349,"column_start":5,"column_end":39}},{"value":"/ # use encode_unicode::error::Utf16PairError;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134670,"byte_end":134718,"line_start":350,"line_end":350,"column_start":5,"column_end":53}},{"value":"/ let mut merger = [0xde00, 'F' as u16, 'S' as u16].iter().to_utf16chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134723,"byte_end":134800,"line_start":351,"line_end":351,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(merger.next(), Some(Err(Utf16PairError::UnexpectedTrailingSurrogate)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134805,"byte_end":134891,"line_start":352,"line_end":352,"column_start":5,"column_end":91}},{"value":"/ let mut inner: std::slice::Iter<u16> = merger.into_inner();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134896,"byte_end":134959,"line_start":353,"line_end":353,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(inner.next(), Some('F' as u16).as_ref()); // not consumed","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":134964,"byte_end":135036,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135041,"byte_end":135048,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135791,"byte_end":135811,"line_start":375,"line_end":375,"column_start":12,"column_end":32},"name":"into_remaining_units","qualname":"<Utf16CharMerger<B, I>>::into_remaining_units","value":"pub fn into_remaining_units(Self) -> Chain<option::IntoIter<B>, I>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the remaining units.\n Unlike `into_inner()` this will never drop any units.","sig":null,"attributes":[{"value":"/ Returns an iterator over the remaining units.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135112,"byte_end":135161,"line_start":359,"line_end":359,"column_start":5,"column_end":54}},{"value":"/ Unlike `into_inner()` this will never drop any units.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135166,"byte_end":135223,"line_start":360,"line_end":360,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135228,"byte_end":135231,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The exact type of the returned iterator should not be depended on.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135236,"byte_end":135306,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135311,"byte_end":135314,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135319,"byte_end":135333,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135338,"byte_end":135341,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135346,"byte_end":135353,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135358,"byte_end":135392,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ # use encode_unicode::error::Utf16PairError;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135397,"byte_end":135445,"line_start":368,"line_end":368,"column_start":5,"column_end":53}},{"value":"/ let slice = [0xd901, 'F' as u16, 'S' as u16];","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135450,"byte_end":135499,"line_start":369,"line_end":369,"column_start":5,"column_end":54}},{"value":"/ let mut merger = slice.iter().to_utf16chars();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135504,"byte_end":135554,"line_start":370,"line_end":370,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(merger.next(), Some(Err(Utf16PairError::UnmatchedLeadingSurrogate)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135559,"byte_end":135643,"line_start":371,"line_end":371,"column_start":5,"column_end":89}},{"value":"/ let mut remaining = merger.into_remaining_units();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135648,"byte_end":135702,"line_start":372,"line_end":372,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(remaining.next(), Some('F' as u16).as_ref());","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135707,"byte_end":135767,"line_start":373,"line_end":373,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135772,"byte_end":135779,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138148,"byte_end":138164,"line_start":430,"line_end":430,"column_start":12,"column_end":28},"name":"Utf16CharDecoder","qualname":"::decoding_iterators::Utf16CharDecoder","value":"Utf16CharDecoder {  }","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"decl_id":null,"docs":" An [`Utf16CharMerger`](struct.Utf16CharMerger.html) that also produces\n offsets and lengths, but can only iterate over slices.","sig":null,"attributes":[{"value":"/ An [`Utf16CharMerger`](struct.Utf16CharMerger.html) that also produces","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":137843,"byte_end":137917,"line_start":424,"line_end":424,"column_start":1,"column_end":75}},{"value":"/ offsets and lengths, but can only iterate over slices.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":137918,"byte_end":137976,"line_start":425,"line_end":425,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":137977,"byte_end":137980,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ See [`SliceExt::utf16char_indices()`](../trait.SliceExt.html#tymethod.utf16char_indices)","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":137981,"byte_end":138073,"line_start":427,"line_end":427,"column_start":1,"column_end":93}},{"value":"/ for examples and error handling.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138074,"byte_end":138110,"line_start":428,"line_end":428,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138928,"byte_end":138936,"line_start":452,"line_end":452,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Utf16CharDecoder>::as_slice","value":"pub fn as_slice(&Self) -> &[u16]","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source slice.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source slice.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138390,"byte_end":138436,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138441,"byte_end":138444,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138449,"byte_end":138463,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138468,"byte_end":138471,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Unlike `Utf16CharMerger::into_inner()`, the unit after an error is never swallowed:","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138476,"byte_end":138563,"line_start":444,"line_end":444,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138568,"byte_end":138575,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::SliceExt;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138580,"byte_end":138615,"line_start":446,"line_end":446,"column_start":5,"column_end":40}},{"value":"/ # use encode_unicode::error::Utf16PairError;","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138620,"byte_end":138668,"line_start":447,"line_end":447,"column_start":5,"column_end":53}},{"value":"/ let mut iter = [0xd901, 'F' as u16, 'S' as u16].utf16char_indices();","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138673,"byte_end":138745,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(iter.next(), Some((0, Err(Utf16PairError::UnmatchedLeadingSurrogate), 1)));","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138750,"byte_end":138840,"line_start":449,"line_end":449,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(iter.as_slice(), &['F' as u16, 'S' as u16]);","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138845,"byte_end":138904,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138909,"byte_end":138916,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2624,"byte_end":2629,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"error","qualname":"::error","value":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":1365},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":1373},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703}],"decl_id":null,"docs":" Errors returned by various conversion methods in this crate.\n","sig":null,"attributes":[{"value":"/ Errors returned by various conversion methods in this crate.","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":2679,"byte_end":2743,"line_start":63,"line_end":63,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3095,"byte_end":3103,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"name":"iterator","qualname":"::iterator","value":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"decl_id":null,"docs":" Iterator types that you should rarely need to name\n","sig":null,"attributes":[{"value":"/ Iterator types that you should rarely need to name","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\lib.rs","byte_start":3110,"byte_end":3164,"line_start":73,"line_end":73,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6316,"byte_end":6332,"line_start":96,"line_end":96,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47198,"byte_end":47199,"line_start":855,"line_end":855,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53825,"byte_end":53826,"line_start":1007,"line_end":1007,"column_start":47,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":55824,"byte_end":55832,"line_start":52,"line_end":52,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":56971,"byte_end":56979,"line_start":82,"line_end":82,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":58117,"byte_end":58125,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":58390,"byte_end":58398,"line_start":121,"line_end":121,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":58620,"byte_end":58623,"line_start":131,"line_end":131,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59132,"byte_end":59135,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59317,"byte_end":59323,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59508,"byte_end":59514,"line_start":159,"line_end":159,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59698,"byte_end":59704,"line_start":165,"line_end":165,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59938,"byte_end":59944,"line_start":173,"line_end":173,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60126,"byte_end":60129,"line_start":179,"line_end":179,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60331,"byte_end":60334,"line_start":185,"line_end":185,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60567,"byte_end":60575,"line_start":195,"line_end":195,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60672,"byte_end":60680,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60804,"byte_end":60812,"line_start":205,"line_end":205,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60898,"byte_end":60906,"line_start":210,"line_end":210,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60985,"byte_end":60993,"line_start":215,"line_end":215,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":61205,"byte_end":61213,"line_start":228,"line_end":228,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":62656,"byte_end":62664,"line_start":277,"line_end":277,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":62786,"byte_end":62794,"line_start":282,"line_end":282,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":62937,"byte_end":62945,"line_start":287,"line_end":287,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":63186,"byte_end":63194,"line_start":297,"line_end":297,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":63437,"byte_end":63445,"line_start":307,"line_end":307,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":63751,"byte_end":63759,"line_start":318,"line_end":318,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":63882,"byte_end":63890,"line_start":323,"line_end":323,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":64597,"byte_end":64605,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":65839,"byte_end":65847,"line_start":386,"line_end":386,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":76943,"byte_end":76955,"line_start":25,"line_end":25,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":77272,"byte_end":77284,"line_start":33,"line_end":33,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":77382,"byte_end":77394,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":77767,"byte_end":77779,"line_start":53,"line_end":53,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":77986,"byte_end":77998,"line_start":60,"line_end":60,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78403,"byte_end":78415,"line_start":73,"line_end":73,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80977,"byte_end":80993,"line_start":154,"line_end":154,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81172,"byte_end":81188,"line_start":160,"line_end":160,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81554,"byte_end":81570,"line_start":170,"line_end":170,"column_start":59,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":82499,"byte_end":82515,"line_start":194,"line_end":194,"column_start":55,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84061,"byte_end":84076,"line_start":242,"line_end":242,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84184,"byte_end":84199,"line_start":247,"line_end":247,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84688,"byte_end":84703,"line_start":263,"line_end":263,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":85405,"byte_end":85420,"line_start":282,"line_end":282,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86080,"byte_end":86095,"line_start":298,"line_end":298,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86473,"byte_end":86482,"line_start":311,"line_end":311,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86586,"byte_end":86595,"line_start":316,"line_end":316,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":87059,"byte_end":87068,"line_start":332,"line_end":332,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":87313,"byte_end":87322,"line_start":341,"line_end":341,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":87458,"byte_end":87467,"line_start":346,"line_end":346,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":89288,"byte_end":89297,"line_start":53,"line_end":53,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":90328,"byte_end":90337,"line_start":79,"line_end":79,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":90510,"byte_end":90519,"line_start":85,"line_end":85,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":91623,"byte_end":91632,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":91853,"byte_end":91856,"line_start":125,"line_end":125,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":92244,"byte_end":92247,"line_start":138,"line_end":138,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":92438,"byte_end":92441,"line_start":144,"line_end":144,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":92668,"byte_end":92671,"line_start":152,"line_end":152,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":92860,"byte_end":92866,"line_start":159,"line_end":159,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93076,"byte_end":93082,"line_start":165,"line_end":165,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93269,"byte_end":93275,"line_start":171,"line_end":171,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93494,"byte_end":93500,"line_start":179,"line_end":179,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93715,"byte_end":93724,"line_start":189,"line_end":189,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93839,"byte_end":93848,"line_start":195,"line_end":195,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93943,"byte_end":93952,"line_start":201,"line_end":201,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":94173,"byte_end":94182,"line_start":215,"line_end":215,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":95832,"byte_end":95841,"line_start":267,"line_end":267,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":95963,"byte_end":95972,"line_start":272,"line_end":272,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":96115,"byte_end":96124,"line_start":277,"line_end":277,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":96382,"byte_end":96391,"line_start":284,"line_end":284,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":96518,"byte_end":96527,"line_start":290,"line_end":290,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":97423,"byte_end":97432,"line_start":311,"line_end":311,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":97681,"byte_end":97690,"line_start":321,"line_end":321,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":98005,"byte_end":98014,"line_start":332,"line_end":332,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":98138,"byte_end":98147,"line_start":337,"line_end":337,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":98853,"byte_end":98862,"line_start":358,"line_end":358,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":99296,"byte_end":99305,"line_start":373,"line_end":373,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100575,"byte_end":100584,"line_start":415,"line_end":415,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":112762,"byte_end":112775,"line_start":26,"line_end":26,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":112970,"byte_end":112983,"line_start":32,"line_end":32,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":113172,"byte_end":113185,"line_start":38,"line_end":38,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":113692,"byte_end":113705,"line_start":51,"line_end":51,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":113871,"byte_end":113884,"line_start":57,"line_end":57,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115797,"byte_end":115814,"line_start":114,"line_end":114,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115995,"byte_end":116012,"line_start":120,"line_end":120,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":116368,"byte_end":116385,"line_start":130,"line_end":130,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117417,"byte_end":117433,"line_start":162,"line_end":162,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117543,"byte_end":117559,"line_start":167,"line_end":167,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":118052,"byte_end":118068,"line_start":183,"line_end":183,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":118779,"byte_end":118795,"line_start":202,"line_end":202,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119319,"byte_end":119335,"line_start":216,"line_end":216,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119717,"byte_end":119727,"line_start":229,"line_end":229,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119834,"byte_end":119844,"line_start":234,"line_end":234,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120312,"byte_end":120322,"line_start":250,"line_end":250,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120571,"byte_end":120581,"line_start":259,"line_end":259,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120720,"byte_end":120730,"line_start":264,"line_end":264,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122624,"byte_end":122638,"line_start":47,"line_end":47,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122862,"byte_end":122876,"line_start":56,"line_end":56,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":126013,"byte_end":126027,"line_start":130,"line_end":130,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":129340,"byte_end":129354,"line_start":205,"line_end":205,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130202,"byte_end":130217,"line_start":229,"line_end":229,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130331,"byte_end":130346,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130876,"byte_end":130891,"line_start":251,"line_end":251,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":131806,"byte_end":131821,"line_start":276,"line_end":276,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133046,"byte_end":133061,"line_start":306,"line_end":306,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133722,"byte_end":133737,"line_start":325,"line_end":325,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133882,"byte_end":133897,"line_start":330,"line_end":330,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135960,"byte_end":135975,"line_start":379,"line_end":379,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":137566,"byte_end":137581,"line_start":414,"line_end":414,"column_start":57,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138240,"byte_end":138256,"line_start":434,"line_end":434,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138363,"byte_end":138379,"line_start":439,"line_end":439,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":139020,"byte_end":139036,"line_start":456,"line_end":456,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":140285,"byte_end":140301,"line_start":490,"line_end":490,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\errors.rs","byte_start":6316,"byte_end":6332,"line_start":96,"line_end":96,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":21108,"byte_end":21113,"line_start":161,"line_end":161,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":37986,"byte_end":37991,"line_start":605,"line_end":605,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":110}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39464,"byte_end":39472,"line_start":653,"line_end":653,"column_start":20,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":5632},"to":{"krate":0,"index":120}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":39473,"byte_end":39478,"line_start":653,"line_end":653,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":120}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":47198,"byte_end":47199,"line_start":855,"line_end":855,"column_start":30,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":126},"to":{"krate":0,"index":120}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":48085,"byte_end":48090,"line_start":876,"line_end":876,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2362},"to":{"krate":0,"index":131}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\traits.rs","byte_start":53825,"byte_end":53826,"line_start":1007,"line_end":1007,"column_start":47,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":135},"to":{"krate":0,"index":131}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":55824,"byte_end":55832,"line_start":52,"line_end":52,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":9028}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":56971,"byte_end":56979,"line_start":82,"line_end":82,"column_start":26,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":58117,"byte_end":58125,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":58390,"byte_end":58398,"line_start":121,"line_end":121,"column_start":23,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":5536}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":58620,"byte_end":58623,"line_start":131,"line_end":131,"column_start":27,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59132,"byte_end":59135,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59317,"byte_end":59323,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59508,"byte_end":59514,"line_start":159,"line_end":159,"column_start":35,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59698,"byte_end":59704,"line_start":165,"line_end":165,"column_start":33,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":59938,"byte_end":59944,"line_start":173,"line_end":173,"column_start":41,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60126,"byte_end":60129,"line_start":179,"line_end":179,"column_start":33,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60331,"byte_end":60334,"line_start":185,"line_end":185,"column_start":41,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60567,"byte_end":60575,"line_start":195,"line_end":195,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60672,"byte_end":60680,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60804,"byte_end":60812,"line_start":205,"line_end":205,"column_start":23,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1748}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60898,"byte_end":60906,"line_start":210,"line_end":210,"column_start":22,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1748}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":60985,"byte_end":60993,"line_start":215,"line_end":215,"column_start":16,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":61205,"byte_end":61213,"line_start":228,"line_end":228,"column_start":19,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1037},"to":{"krate":1,"index":472}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":62656,"byte_end":62664,"line_start":277,"line_end":277,"column_start":21,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":7148}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":62786,"byte_end":62794,"line_start":282,"line_end":282,"column_start":21,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":62937,"byte_end":62945,"line_start":287,"line_end":287,"column_start":23,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":63186,"byte_end":63194,"line_start":297,"line_end":297,"column_start":26,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":63437,"byte_end":63445,"line_start":307,"line_end":307,"column_start":27,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1841}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":63751,"byte_end":63759,"line_start":318,"line_end":318,"column_start":31,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":63882,"byte_end":63890,"line_start":323,"line_end":323,"column_start":32,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1841}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":64597,"byte_end":64605,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_char.rs","byte_start":65839,"byte_end":65847,"line_start":386,"line_end":386,"column_start":6,"column_end":14},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":76943,"byte_end":76955,"line_start":25,"line_end":25,"column_start":25,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":77272,"byte_end":77284,"line_start":33,"line_end":33,"column_start":21,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":77382,"byte_end":77394,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":77767,"byte_end":77779,"line_start":53,"line_end":53,"column_start":28,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":77986,"byte_end":77998,"line_start":60,"line_end":60,"column_start":15,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":3190}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":78403,"byte_end":78415,"line_start":73,"line_end":73,"column_start":21,"column_end":33},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":80977,"byte_end":80993,"line_start":154,"line_end":154,"column_start":45,"column_end":61},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1067},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81172,"byte_end":81188,"line_start":160,"line_end":160,"column_start":46,"column_end":62},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":81554,"byte_end":81570,"line_start":170,"line_end":170,"column_start":59,"column_end":75},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1067},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":82499,"byte_end":82515,"line_start":194,"line_end":194,"column_start":55,"column_end":71},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1067},"to":{"krate":1,"index":3190}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84061,"byte_end":84076,"line_start":242,"line_end":242,"column_start":28,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84184,"byte_end":84199,"line_start":247,"line_end":247,"column_start":10,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":84688,"byte_end":84703,"line_start":263,"line_end":263,"column_start":23,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":85405,"byte_end":85420,"line_start":282,"line_end":282,"column_start":34,"column_end":49},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86080,"byte_end":86095,"line_start":298,"line_end":298,"column_start":25,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86473,"byte_end":86482,"line_start":311,"line_end":311,"column_start":28,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":86586,"byte_end":86595,"line_start":316,"line_end":316,"column_start":10,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":87059,"byte_end":87068,"line_start":332,"line_end":332,"column_start":23,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":87313,"byte_end":87322,"line_start":341,"line_end":341,"column_start":34,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf8_iterators.rs","byte_start":87458,"byte_end":87467,"line_start":346,"line_end":346,"column_start":25,"column_end":34},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":89288,"byte_end":89297,"line_start":53,"line_end":53,"column_start":18,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":9028}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":90328,"byte_end":90337,"line_start":79,"line_end":79,"column_start":21,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":90510,"byte_end":90519,"line_start":85,"line_end":85,"column_start":25,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":91623,"byte_end":91632,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":5536}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":91853,"byte_end":91856,"line_start":125,"line_end":125,"column_start":28,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":92244,"byte_end":92247,"line_start":138,"line_end":138,"column_start":36,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":92438,"byte_end":92441,"line_start":144,"line_end":144,"column_start":34,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":92668,"byte_end":92671,"line_start":152,"line_end":152,"column_start":42,"column_end":45},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":92860,"byte_end":92866,"line_start":159,"line_end":159,"column_start":28,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93076,"byte_end":93082,"line_start":165,"line_end":165,"column_start":36,"column_end":42},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93269,"byte_end":93275,"line_start":171,"line_end":171,"column_start":34,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93494,"byte_end":93500,"line_start":179,"line_end":179,"column_start":42,"column_end":48},"kind":{"Impl":{"id":80}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93715,"byte_end":93724,"line_start":189,"line_end":189,"column_start":23,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93839,"byte_end":93848,"line_start":195,"line_end":195,"column_start":24,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1748}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":93943,"byte_end":93952,"line_start":201,"line_end":201,"column_start":16,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":94173,"byte_end":94182,"line_start":215,"line_end":215,"column_start":19,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":472}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":95832,"byte_end":95841,"line_start":267,"line_end":267,"column_start":21,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":7148}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":95963,"byte_end":95972,"line_start":272,"line_end":272,"column_start":21,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":96115,"byte_end":96124,"line_start":277,"line_end":277,"column_start":23,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":96382,"byte_end":96391,"line_start":284,"line_end":284,"column_start":21,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1841}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":96518,"byte_end":96527,"line_start":290,"line_end":290,"column_start":14,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1830}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":97423,"byte_end":97432,"line_start":311,"line_end":311,"column_start":26,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":97681,"byte_end":97690,"line_start":321,"line_end":321,"column_start":27,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1841}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":98005,"byte_end":98014,"line_start":332,"line_end":332,"column_start":30,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":98138,"byte_end":98147,"line_start":337,"line_end":337,"column_start":31,"column_end":40},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1841}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":98853,"byte_end":98862,"line_start":358,"line_end":358,"column_start":25,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":99296,"byte_end":99305,"line_start":373,"line_end":373,"column_start":24,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_char.rs","byte_start":100575,"byte_end":100584,"line_start":415,"line_end":415,"column_start":6,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":112762,"byte_end":112775,"line_start":26,"line_end":26,"column_start":21,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":112970,"byte_end":112983,"line_start":32,"line_end":32,"column_start":26,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":113172,"byte_end":113185,"line_start":38,"line_end":38,"column_start":19,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":113692,"byte_end":113705,"line_start":51,"line_end":51,"column_start":28,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":113871,"byte_end":113884,"line_start":57,"line_end":57,"column_start":21,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115797,"byte_end":115814,"line_start":114,"line_end":114,"column_start":46,"column_end":63},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":115995,"byte_end":116012,"line_start":120,"line_end":120,"column_start":47,"column_end":64},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":116368,"byte_end":116385,"line_start":130,"line_end":130,"column_start":60,"column_end":77},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117417,"byte_end":117433,"line_start":162,"line_end":162,"column_start":28,"column_end":44},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":117543,"byte_end":117559,"line_start":167,"line_end":167,"column_start":10,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":118052,"byte_end":118068,"line_start":183,"line_end":183,"column_start":23,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":118779,"byte_end":118795,"line_start":202,"line_end":202,"column_start":34,"column_end":50},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119319,"byte_end":119335,"line_start":216,"line_end":216,"column_start":25,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119717,"byte_end":119727,"line_start":229,"line_end":229,"column_start":28,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":119834,"byte_end":119844,"line_start":234,"line_end":234,"column_start":10,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120312,"byte_end":120322,"line_start":250,"line_end":250,"column_start":23,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120571,"byte_end":120581,"line_start":259,"line_end":259,"column_start":34,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\utf16_iterators.rs","byte_start":120720,"byte_end":120730,"line_start":264,"line_end":264,"column_start":25,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122624,"byte_end":122638,"line_start":47,"line_end":47,"column_start":13,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":122862,"byte_end":122876,"line_start":56,"line_end":56,"column_start":40,"column_end":54},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":126013,"byte_end":126027,"line_start":130,"line_end":130,"column_start":53,"column_end":67},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":129340,"byte_end":129354,"line_start":205,"line_end":205,"column_start":56,"column_end":70},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130202,"byte_end":130217,"line_start":229,"line_end":229,"column_start":28,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130331,"byte_end":130346,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":130876,"byte_end":130891,"line_start":251,"line_end":251,"column_start":23,"column_end":38},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":131806,"byte_end":131821,"line_start":276,"line_end":276,"column_start":34,"column_end":49},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133046,"byte_end":133061,"line_start":306,"line_end":306,"column_start":20,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133722,"byte_end":133737,"line_start":325,"line_end":325,"column_start":13,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1160},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":133882,"byte_end":133897,"line_start":330,"line_end":330,"column_start":41,"column_end":56},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":135960,"byte_end":135975,"line_start":379,"line_end":379,"column_start":54,"column_end":69},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1160},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":137566,"byte_end":137581,"line_start":414,"line_end":414,"column_start":57,"column_end":72},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1160},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138240,"byte_end":138256,"line_start":434,"line_end":434,"column_start":29,"column_end":45},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1173},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":138363,"byte_end":138379,"line_start":439,"line_end":439,"column_start":10,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":139020,"byte_end":139036,"line_start":456,"line_end":456,"column_start":23,"column_end":39},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1173},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\prana\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.6\\src\\decoding_iterators.rs","byte_start":140285,"byte_end":140301,"line_start":490,"line_end":490,"column_start":20,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1173},"to":{"krate":2,"index":6960}}]}